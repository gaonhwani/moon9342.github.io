<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>https://moon9342.github.io/</title>
   
   <link>https://moon9342.github.io/</link>
   <description>얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융)</description>
   <language>en-uk</language>
   
   <title>
   <![CDATA[ IT Technical Training ]]>
   </title>
   <description>
   <![CDATA[ 얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융) ]]>
   </description>
   <link>https://moon9342.github.io/</link>
   <image>
   <url>https://moon9342.github.io/assets/built/images/favicon.jpg</url>
   <title>IT Technical Training</title>
   <link>https://moon9342.github.io/</link>
   </image>
   <generator>Jekyll 3.6.2</generator>
   <lastBuildDate></lastBuildDate>
   <atom:link href="https://moon9342.github.io/rss.xml" rel="self" type="application/rss+xml"/>
   <ttl>60</ttl>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Python 데이터분석 라이브러리(13) - Folium</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-folium</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-16T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-folium</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">데이터 시각화 - Folium</strong></p>

<p><code class="highlighter-rouge">Folium</code>은 library는 데이터를 지도위에 시각화 할 때 유용하게 사용됩니다.</p>

<p>Folium을 사용하기 위해서는 먼저 library를 설치해야 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">conda</span> <span class="n">install</span> <span class="o">-</span><span class="n">c</span> <span class="n">conda</span><span class="o">-</span><span class="n">forge</span> <span class="n">folium</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Folium - 지도 생성</strong></p>

<p>Folium library의 <code class="highlighter-rouge">Map()</code> 함수를 이용하면 쉽게 지도 객체를 생성할 수 있습니다. 
이렇게 만들어진 지도 화면은 고정된게 아니고 줌기능과 화면 이동기능이 함께 제공됩니다.</p>

<p>Folium은 코드의 실행결과로 웹 기반 지도를 만들어주기 때문에 웹 환경에서만 지도를 확인할 
수 있다는 점은 주의해야 합니다. 우리는 Jupyter Notebook을 사용하고 있기 때문에 바로
지도 객체를 확인할 수 있습니다. 만들어진 지도 객체에 save() 함수를 이용하면 
<code class="highlighter-rouge">html</code> 파일로 저장할 수 있습니다.</p>

<p>간단한 코드를 이용해 지도를 확인해 보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">folium</span>

<span class="c"># 서울 지도</span>
<span class="c"># location=[위도, 경도]</span>
<span class="n">seoul_map</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="mf">37.55</span><span class="p">,</span><span class="mf">126.98</span><span class="p">],</span> <span class="n">zoom_start</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

<span class="n">seoul_map</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s">'./seoul_geo.html'</span><span class="p">)</span>

<span class="n">seoul_map</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Folium - 지도 스타일 적용</strong></p>

<p>Map() 함수에 tiles 속성을 지정하면 지도에 적용하는 스타일을 바꿀 수 있습니다.</p>

<p>아래의 코드로 확인해보도록 하죠</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">folium</span>

<span class="c"># 서울 지도</span>
<span class="c"># location=[위도, 경도]</span>
<span class="n">seoul_map</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="mf">37.55</span><span class="p">,</span><span class="mf">126.98</span><span class="p">],</span> 
                       <span class="n">zoom_start</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span>
                       <span class="n">tiles</span><span class="o">=</span><span class="s">'Stamen Terrain'</span><span class="p">)</span>   <span class="c"># tiles='Stamen Toner'</span>

<span class="c"># tiles='Stamen Terrain' : 산악지형등의 지형이 보다 선명하게 보인다.</span>
<span class="c"># tiles='Stamen Toner'   : 흑백 스타일로 도로망을 강조해서 볼 수 있다.</span>

<span class="n">seoul_map</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Folium - 마커 활용</strong></p>

<p>원하는 곳의 위치데이터를 DataFrame으로 변환한 후 Folium 지도에 위치를 표시할 
수 있습니다. Marker를 표시하려면 Marker() 함수에 위도, 경도를 전달하면 됩니다.
추가적으로 popup 속성을 이용하면 마커를 클릭했을 때 정보를 보여주는 팝업창을 
만들 수 있습니다.</p>

<p>장소에 대한 위치데이터가 필요하기 때문에 이 데이터는 아래의 파일을 이용해서
불러들이도록 하겠습니다. (대학교 위치정보)</p>

<p><a href="/assets/downloads/seoul_university.zip" target="_blank">실습 Excel 파일(seoul_university.xlsx)</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">folium</span>

<span class="c"># index_col : 특정 column을 DataFrame의 index로 설정</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/seoul_university.xlsx'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>


<span class="c"># display(df)</span>

<span class="c"># 서울 지도</span>
<span class="n">seoul_map</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="mf">37.55</span><span class="p">,</span> <span class="mf">126.98</span><span class="p">],</span> 
                       <span class="n">tiles</span><span class="o">=</span><span class="s">'Stamen Terrain'</span><span class="p">,</span>
                       <span class="n">zoom_start</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

<span class="c"># 대학교 위치를 마커로 표시(서울의 모든 대학에 대한 정보가 있는건 아니다.)</span>

<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lng</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s">'위도'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'경도'</span><span class="p">]):</span>
    <span class="n">folium</span><span class="o">.</span><span class="n">Marker</span><span class="p">([</span><span class="n">lat</span><span class="p">,</span><span class="n">lng</span><span class="p">],</span> <span class="n">popup</span><span class="o">=</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">seoul_map</span><span class="p">)</span>
    
<span class="n">seoul_map</span>   

</code></pre></div></div>

<p><img src="assets/built/images/python-folium-sample1.png" alt="folium-예제1" /></p>

<p>Marker에 대해서 조금만 더 알아보도록 하죠. 원형 마커를 이용할 수 있는데 이때
Marker의 크기, 색상, 투명도 등을 설정할 수 있습니다.</p>

<p>아래의 코드로 살펴보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">folium</span>

<span class="c"># index_col : 특정 column을 DataFrame의 index로 설정</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/seoul_university.xlsx'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>


<span class="c"># 서울 지도</span>
<span class="n">seoul_map</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="mf">37.55</span><span class="p">,</span> <span class="mf">126.98</span><span class="p">],</span> 
                       <span class="n">tiles</span><span class="o">=</span><span class="s">'Stamen Terrain'</span><span class="p">,</span>
                       <span class="n">zoom_start</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

<span class="c"># 대학교 위치를 마커로 표시(서울의 모든 대학에 대한 정보가 있는건 아니다.)</span>

<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lng</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s">'위도'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'경도'</span><span class="p">]):</span>
    <span class="n">folium</span><span class="o">.</span><span class="n">CircleMarker</span><span class="p">([</span><span class="n">lat</span><span class="p">,</span><span class="n">lng</span><span class="p">],</span> 
                        <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>      <span class="c"># 원의 반지름</span>
                        <span class="n">color</span><span class="o">=</span><span class="s">'orange'</span><span class="p">,</span> <span class="c"># 원의 둘레 색상</span>
                        <span class="n">fill</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
                        <span class="n">fill_color</span><span class="o">=</span><span class="s">'yellow'</span><span class="p">,</span> <span class="c"># 원을 채우는 색</span>
                        <span class="n">fill_opacity</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span> <span class="c"># 투명도</span>
                        <span class="n">popup</span><span class="o">=</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">seoul_map</span><span class="p">)</span>
    
<span class="n">seoul_map</span>    

</code></pre></div></div>

<p><img src="assets/built/images/python-folium-sample2.png" alt="folium-예제2" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Folium - 지도 영역에 단계 구분도 표시</strong></p>

<p>지도 상에 어떤 경계에 둘러싸인 영역에 색을 칠하거나 음영 등으로 정보를 나타내는
시각화 방법으로 상당히 많이 이용됩니다. 전달하려는 정보의 값이 커지면 영역에
칠해진 색이나 음영이 진해지게 됩니다.</p>

<p>예제를 위해 두개의 데이터를 사용할 것인데 하나는 인구 변화 데이터(2007~2017)이고
다른 하나는 경기도 행정구역 경계 지리 정보입니다.</p>

<p><a href="/assets/downloads/gyeonggi_population.zip" target="_blank">실습 Excel 파일(gyeonggi_population.xlsx)</a></p>

<p><a href="/assets/downloads/gyeonggi_boundary.zip" target="_blank">실습 JSON 파일(gyeonggi_boundary.json)</a></p>

<p>코드로 살펴보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">folium</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="c"># 경기도 인구 변화 데이터를 불러와서 DataFrame으로 변환</span>
<span class="n">pop_filepath</span> <span class="o">=</span> <span class="s">'./data/gyeonggi_population.xlsx'</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/gyeonggi_population.xlsx'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="s">'구분'</span><span class="p">)</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>   <span class="c"># 열 이름을 문자열로 변환</span>

<span class="c"># display(df)</span>

<span class="c"># 경기도 시군구 경계 정보를 가진 geo-json 파일 불러들이기</span>
<span class="n">geo_path</span> <span class="o">=</span> <span class="s">'./data/gyeonggi_boundary.json'</span>

<span class="n">geo_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">geo_path</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">))</span>

<span class="c"># 경기도 지도 </span>
<span class="n">g_map</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="mf">37.5502</span><span class="p">,</span> <span class="mf">126.982</span><span class="p">],</span>
                   <span class="n">tiles</span><span class="o">=</span><span class="s">'Stamen Terrain'</span><span class="p">,</span>
                   <span class="n">zoom_start</span><span class="o">=</span><span class="mi">9</span><span class="p">)</span>

<span class="c"># g_map</span>

<span class="c"># 출력할 연도 선택</span>

<span class="n">year</span> <span class="o">=</span> <span class="s">'2007'</span>

<span class="n">folium</span><span class="o">.</span><span class="n">Choropleth</span><span class="p">(</span><span class="n">geo_data</span><span class="o">=</span><span class="n">geo_data</span><span class="p">,</span>  <span class="c"># 지도 경계</span>
                  <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">year</span><span class="p">],</span>      <span class="c"># 표시하려는 데이터</span>
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="n">year</span><span class="p">]],</span> <span class="c"># 열지정</span>
                  <span class="n">fill_color</span><span class="o">=</span><span class="s">'YlOrRd'</span><span class="p">,</span>
                  <span class="n">fill_opacity</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
                  <span class="n">line_opacity</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span>
                  <span class="n">threshold_scale</span><span class="o">=</span><span class="p">[</span><span class="mi">10000</span><span class="p">,</span> <span class="mi">100000</span><span class="p">,</span> <span class="mi">300000</span><span class="p">,</span> <span class="mi">500000</span><span class="p">,</span> <span class="mi">700000</span><span class="p">],</span>
                  <span class="n">key_on</span><span class="o">=</span><span class="s">'feature.properties.name'</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">g_map</span><span class="p">)</span>

<span class="n">g_map</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-folium-sample3.png" alt="folium-예제3" /></p>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(12) - seaborn</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-seaborn</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-15T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-seaborn</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">데이터 시각화 - seaborn</strong></p>

<p><code class="highlighter-rouge">Seaborn</code>은 Matplotlib의 기능과 스타일을 확장한 파이썬 시각화 library입니다.</p>

<p>비교적 단순하며 기능도 훨씬 다양하기 때문에 많이 사용되고 있습니다. Seaborn을 사용하기
위해서는 먼저 library를 설치해야 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">conda</span> <span class="n">install</span> <span class="n">seaborn</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - scatter</strong></p>

<p>먼저 살펴볼 기능은 회귀선을 포함하는 산점도 입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>

<span class="c"># print(titanic.info())</span>

<span class="c"># 회귀선을 포함하고 있는 산점도</span>

<span class="c"># sns.set_style('darkgrid')   # style을 적용하면 한글이 깨진다</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">sns</span><span class="o">.</span><span class="n">regplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'age'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'fare'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'회귀선이 있는 산점도 : age vs. fare'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample1.png" alt="seaborn-예제1" /></p>

<p>seaborn은 범주형 데이터에 들어 있는 각 범주별 데이터의 분포를 확인할 수 도 있습니다.
stripplot()이나 swarmplot()을 이용하면 되는데 swarmplot()은 데이터의 분산까지 고려해서
데이터 포인트가 서로 중복되지 않도록 그래프를 그려줍니다.</p>

<p>아래의 코드로 확인해보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="c"># 이산형 변수의 분포 - 데이터 분산 미고려(중복표시)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">stripplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
              <span class="n">y</span><span class="o">=</span><span class="s">'age'</span><span class="p">,</span>
              <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
              <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>

<span class="c"># 이산형 변수의 분포 - 데이터 분산 고려(중복표시 없음)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">swarmplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
              <span class="n">y</span><span class="o">=</span><span class="s">'age'</span><span class="p">,</span>
              <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
              <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Strip plot'</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Swarm plot'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample2.png" alt="seaborn-예제2" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - histogram / kde</strong></p>

<p>이번에는 <code class="highlighter-rouge">Histogram</code>과 <code class="highlighter-rouge">Kernel Density Function</code>(커널 밀도 함수)를 그래프로
출력할 수 있는 기능을 살펴보도록 하겠습니다.</p>

<p>먼저 구현된 코드와 결과를 보고 부연설명을 하기로 하죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">ax3</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>

<span class="c"># distplot은 deprecated</span>
<span class="n">sns</span><span class="o">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">titanic</span><span class="p">[</span><span class="s">'fare'</span><span class="p">],</span> 
             <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>

<span class="c"># KDE</span>
<span class="n">sns</span><span class="o">.</span><span class="n">kdeplot</span><span class="p">(</span><span class="n">titanic</span><span class="p">[</span><span class="s">'fare'</span><span class="p">],</span> 
             <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>

<span class="c"># histogram</span>
<span class="n">sns</span><span class="o">.</span><span class="n">histplot</span><span class="p">(</span><span class="n">titanic</span><span class="p">[</span><span class="s">'fare'</span><span class="p">],</span> 
             <span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic fare - hist/kde'</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic fare - kde'</span><span class="p">)</span>
<span class="n">ax3</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic fare - hist'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample3.png" alt="seaborn-예제3" /></p>

<p><code class="highlighter-rouge">Histogram</code>의 내용은 대충 이해하고 있지만 커널 밀도 함수는 도대체 무엇일까요?</p>

<p>여기서부터 조금 수학적인 내용이 나오게 되는데 참고삼아 알아두시면 될 듯 합니다.</p>

<p>커널 밀도 함수는 <code class="highlighter-rouge">KDE(Kernel Density Estimation)</code> - 커널 밀도 추정을 위한 함수입니다.</p>

<p><code class="highlighter-rouge">KDE(Kernel Density Estimation)</code>은 커널 함수(Kernel Function)을 이용한 밀도추정방법 중
하나 입니다. 따라서 KDE를 알기 위해서는 먼저 밀도추정(<code class="highlighter-rouge">Density Estimation</code>)부터 
알아야 합니다.</p>

<p>우리는 밀도(Density, 단위 : kg/3제곱미터)라는 말을 알고 있습니다.</p>

<p>수학/과학적으로 밀도는 질량(mass, 단위 : kg)을 부피(volume, 단위 : 3제곱미터)로 
나눈값을 의미합니다.</p>

<p>예를 들어, 같은 부피의 철과 솜이 있을 때 당연히 철과 같이 더 조밀한 물체가 질량이 높기 때문에 
밀도가 높다고 말할 수 있습니다.</p>

<p>여기서 주의해야 할 점은 우리가 알아보고자하는 <code class="highlighter-rouge">Density Estimation</code>의 Density가 우리가 알고
있는 밀도(Density)의 의미가 아니라는 겁니다. 일반적으로 Machine Learning, 
Data Engineering에서 사용하는 Density는 <code class="highlighter-rouge">Probability Density</code>(확률밀도)를 의미합니다.</p>

<p>따라서 우리가 알아보려는 Density Estimation(밀도추정) 역시 <code class="highlighter-rouge">Probability Density Estimation</code>이라고
해야 합니다. 하지만 너무 길기 때문에 <code class="highlighter-rouge">Probability</code>를 빼고 단순히 <code class="highlighter-rouge">Density Estimation</code>이라고 
부르는 것 뿐입니다.</p>

<p>아무튼, (Probability) Density Estimation 이란 무엇일까요? 단순한 예를 들어보죠.</p>

<p>Data란 어떤 변수가 가질 수 있는 다양한 가능성 중 하나가 현실 세계에서 구체화 된 값입니다.
만약 모든것을 알고 있는 초월자가 존재한다면 이 변수(random variable)가 가질 수 있는 
본질적인 특성을 당연히 알고 있을 것입니다. 하지만 우리는 유한한 인간이기 때문에 관측된
데이터를 통해 그 변수(random variable)이 가지는 본질적인 특성을 파악하고자 노력합니다.</p>

<p>하나의 데이터는 변수의 일면에 불과하기 때문에 변수의 본질적인 특성을 파악할 수 없습니다. 
당연히 변수의 본질적인 특성을 파악하기 위해서 우리는 많은 데이터가 필요하며 이렇게 관측된
데이터의 분포로 부터 원래 변수의 분포 특성을 확률적으로 추정하고자 하는 것이 
바로 <code class="highlighter-rouge">(Probability) Density Estimation</code> 입니다.</p>

<p>예를 들어 잠실 대교를 통과하는 차량의 일일 교통량을 파악하는게 목적이라고 가정하면,
이 때의 변수(random variable)은 일일 교통량이 됩니다. 그리고 매일매일 실제로 관측한 값이
데이터가 되겠죠. 당연히 날마다 교통량은 다르게 관측될 겁니다. 하루, 이틀의 데이터만을
가지고 잠실 대교의 일일 교통량을 결론내리기에는 많이 부족할 겁니다. 하지만 이런 데이터가 
6개월, 1년, 3년이상 쌓이게 되면 우리는 이 일일 교통량이라는 변수가 어떤 값의 분포특성을
가지는지 좀 더 정확하게 표현할 수 있게될 겁니다.</p>

<p>이 때 일일 교통량이라는 변수가 가질 수 있는 값과 그 값을 가질 가능성의 정도를 추정하는
작업이 바로 <code class="highlighter-rouge">(Probability) Density Estimation</code>입니다.</p>

<p>자 그러면 변수(random variable)의 밀도(density)를 추정하려면 어떻게 해야 할까요? 
변수의 값들만 와다다다 있는 상태에서 특정 값을 가질 가능성의 정도를 어떻게 알 수 있을까요?</p>

<p>이때 우리에게 그 값을 알려주는 함수가 필요한데 이 함수가 바로 
확률밀도함수(<code class="highlighter-rouge">Probability Density Function</code> - pdf)입니다.</p>

<p>즉, 어떤 변수 x의 밀도를 추정한다는 말은 x의 확률밀도함수를 (이용해) 추정한다는 말과 같은 
의미를 가지게 됩니다.</p>

<p>어떤 변수 x의 확률밀도함수 f(x)가 아래의 그림과 같다고 가정하면,</p>

<p><img src="assets/built/images/python-seaborn-pdf.png" alt="pdf" /></p>

<p>f(a)는 x = a에서의 확률밀도(probability density) 즉, 변수 x가 a라는 값을
가질 상대적인 가능성(relative likelihood)를 나타내게 됩니다.</p>

<p>위 확률밀도함수에서 밀도는 함수값입니다. 우리는 이렇게 특정 값에서 확률밀도의 값을
구할 수 있지만 x가 a와 b사이처럼 특정 구간의 값을 가질 확률도 구할 수 있습니다.</p>

<p>이러한 확률은 어떻게 구하면 될까요? a와 b 구간에서의 확률밀도함수의 면적으로 구하면
됩니다. 이 면적을 구하기 위해서 우리가 수학적으로 적분을 수행하는 것이구요.</p>

<p>결론적으로 <code class="highlighter-rouge">density</code>(밀도)는 확률밀도함수(pdf)의 함수값이며 이 함수를 일정구간에 대해
적분하면 확률이 나오게 됩니다.</p>

<p>따라서 이 확률밀도함수(pdf)를 구할 수 있으면 그 변수가 가질 수 있는 값의 범위, 확률분포등을
알 수 있게되고 이 <code class="highlighter-rouge">pdf</code>가 <code class="highlighter-rouge">Density Estimation</code>의 중추적인 역할을 하게 됩니다.</p>

<p>조금만 더 이야기를 확장해보죠.</p>

<p>위에서 설명한 밀도추정(Density Estimation)은 크게 <code class="highlighter-rouge">parametric</code> 방식과 
<code class="highlighter-rouge">non-parametric</code> 방식으로 구분됩니다.</p>

<p><code class="highlighter-rouge">Parametric</code> 밀도추정 방식은 미리 pdf에 대한 모델을 정해놓고 데이터들로부터 모델의
파라미터만 추정하는 방식입니다. 위에서 잠깐 언급한 일일 교통량에 대한 pdf를 
정규분포를 따른다고 가정해 버리는 거죠. 그러면 관측된 데이터로부터 평균과 분산만 구하면
되기 때문에 밀도추정문제 자체가 상당히 간단해집니다.</p>

<p>하지만 현실적으로 이렇게 pdf를 우리가 가정하거나 미리 알 수 있을까요? 전혀 그렇지 않습니다.
이런 경우 어떠한 사전정보나 지식없이 순수하게 관측된 데이터만을 이용해서 확률밀도함수를 추정해야
하는데 이를 non-parametric density estimation 이라고 합니다.</p>

<p>non-parametric density estimation의 가장 간단한 형태가 바로 <code class="highlighter-rouge">histogram</code>입니다. 
즉, 관측된 데이터로부터 histogram을 구한 후 구한 histogram을 정규화하여 확률밀도함수로
사용하는 것이죠.</p>

<p>이런방법을 <code class="highlighter-rouge">histogram density estimation</code> 이라고 합니다.</p>

<p><img src="assets/built/images/python-seaborn-histogram_density_estimation.png" alt="histogram density estimation" /></p>

<p>그러면 <code class="highlighter-rouge">histogram density estimation</code> 방법은 문제가 없는가? 라는게 궁금해 지는데 
사실 histogram은 bin의 경계에서 불연속성이 나타난다는 점, bin의 크기 및 위치에 따라서
histogram자체가 달라진다는점등의 문제를 가지고 있습니다.</p>

<p><code class="highlighter-rouge">Kernel Density Estimation</code>은 non-parametric density estimation 방법 중 하나로서
커널 함수(Kernel Function)을 이용하여 histogram방법의 문제점을 개선한 방법입니다.</p>

<p>커널 함수(Kernel Function)은 원점을 중심으로 대칭이면서 적분값이 1인 non-negative 함수를
의미합니다. Uniform, Gaussian, Cosine 함수가 대표적인 커널 함수입니다.</p>

<p><img src="assets/built/images/python-seaborn-kernel_function.png" alt="Kernel Function" /></p>

<p>그러면 우리의 데이터에 대한 커널 함수를 어떻게 만들 수 있는가? 라는게 궁금해지는데 
커널 함수 만드는 과정을 수식을 배제하고 조금 쉽게 이해하자면 다음과 같이 하면 됩니다.</p>

<ol>
  <li>관측된 데이터 각각마다 해당 데이터 값을 중심으로 하는 커널 함수를 생성합니다.</li>
  <li>이렇게 만들어진 커널 함수를 모두 더한 후 전체 데이터의 개수로 나눕니다.</li>
</ol>

<p>아래의 그림은 histogram을 이용한 밀도 추정 방법과 KDE 방법을 비교한 것인데, KDE방법은
histogram에 비해 이산적이지 않고 상당히 smooth한 확률밀도함수(pdf)를 얻을 수 있습니다.</p>

<p>KDE(Kernel Density Estimation)를 통해 얻은 확률밀도함수는 
히스토그램 확률밀도함수를 스무딩(smoothing)한 것으로도 볼 수 있다는 의미입니다.</p>

<p><img src="assets/built/images/python-seaborn-histogram_vs_kde.png" alt="KDE" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - heatmap</strong></p>

<p>Seaborn library는 히트맵을 제공합니다. 2개의 범주형 데이터 변수를 각각
x축, y축에 놓고 데이터를 matrix형태로 분류합니다.</p>

<p>pandas의 피벗테이블을 이용해 <code class="highlighter-rouge">sex</code> 컬럼을 행 인덱스로, <code class="highlighter-rouge">class</code> 컬럼을
열 이름으로 설정한 후 그 내용을 확인해 보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">table</span> <span class="o">=</span> <span class="n">titanic</span><span class="o">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'sex'</span><span class="p">],</span>
                            <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'class'</span><span class="p">],</span>
                            <span class="n">aggfunc</span><span class="o">=</span><span class="s">'size'</span><span class="p">)</span>   <span class="c"># 데이터 값의 크기를 기준으로 집계</span>

<span class="n">sns</span><span class="o">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">table</span><span class="p">,</span>
            <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fmt</span><span class="o">=</span><span class="s">'d'</span><span class="p">,</span>   <span class="c"># 데이터 값 표시여부, 정수형 포맷</span>
            <span class="n">cmap</span><span class="o">=</span><span class="s">'YlGnBu'</span><span class="p">,</span>         <span class="c"># 컬러 맵</span>
            <span class="n">linewidth</span><span class="o">=.</span><span class="mi">5</span><span class="p">,</span>          <span class="c"># 구분 선</span>
            <span class="n">cbar</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>            <span class="c"># 컬러 바 표시 여부</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample4.png" alt="seaborn-예제4" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - barplot</strong></p>

<p>seaborn에도 막대그래프를 그려주는 <code class="highlighter-rouge">barplot</code>이 존재합니다. 옵션을 살짝 바꿔가면서
그래프를 그려보죠. x축에는 <code class="highlighter-rouge">sex</code>, y축에는 <code class="highlighter-rouge">survived</code> 컬럼을 할당해서 그래프를
그려보겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">ax3</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'sex'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'survived'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
            <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'sex'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'survived'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
            <span class="n">hue</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
            <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'sex'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'survived'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
            <span class="n">hue</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
            <span class="n">dodge</span><span class="o">=</span><span class="s">'False'</span><span class="p">,</span>
            <span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic - sex / survived'</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic - sex / class'</span><span class="p">)</span>
<span class="n">ax3</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic - sex / class(stacked)'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample5.png" alt="seaborn-예제5" /></p>

<p>막대그래프가 정상적으로 그려지는걸 확인할 수 있습니다. 그런데 가만히 보니 막대그래프의
위쪽으로 선들이 하나씩 보이는데 이 선들은 무엇일까요?</p>

<p>이 선들은 오차막대(<code class="highlighter-rouge">error bars</code>)라고 불리는 것으로 신뢰구간(<code class="highlighter-rouge">Confidence Interval-CI</code>)을
나타냅니다.</p>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - countplot</strong></p>

<p>각 범주에 속하는 데이터의 개수를 막대 그래프로 나타냅니다.</p>

<p>그리 어렵지 않은 내용이니 예제를 통해서 알아보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">ax3</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
              <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
              <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
              <span class="n">hue</span><span class="o">=</span><span class="s">'who'</span><span class="p">,</span>
              <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
              <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'class'</span><span class="p">,</span>
              <span class="n">hue</span><span class="o">=</span><span class="s">'who'</span><span class="p">,</span>
              <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
              <span class="n">dodge</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
              <span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic class'</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic class - who'</span><span class="p">)</span>
<span class="n">ax3</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'titanic class - who(stacked)'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample6.png" alt="seaborn-예제6" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">seaborn - boxplot</strong></p>

<p>boxplot은 범주형 데이터 분포와 주요 통계 지표를 함께 제공합니다. 기본적인 boxplot은
matplotlib에서 살펴봤으니 seaborn에서 사용하는 방법을 코드로 알아보죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># Data Loading</span>
<span class="c"># 추후에 살펴볼 titanic data set을 seaborn의 기능을 이용해 load합니다.</span>

<span class="n">titanic</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">load_dataset</span><span class="p">(</span><span class="s">'titanic'</span><span class="p">)</span>

<span class="c"># display(titanic)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'alive'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'age'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
            <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>

<span class="n">sns</span><span class="o">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'alive'</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="s">'age'</span><span class="p">,</span>
            <span class="n">hue</span><span class="o">=</span><span class="s">'sex'</span><span class="p">,</span>
            <span class="n">data</span><span class="o">=</span><span class="n">titanic</span><span class="p">,</span>
            <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>


<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-seaborn-plot-sample7.png" alt="seaborn-예제7" /></p>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석을 위한 통계</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-statistics</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-14T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-statistics</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">Python 데이터분석을 위한 Statistics</strong></p>

<p>여기서는 데이터분석을 위해 기본적으로 알고 가야 하는 몇가지 통계적인 개념들에 대해서
이야기해 보려 합니다. 중요한 개념들을 수학적 표현보다는 이해하기 쉬운 
언어와 예제를 이용해 알아보도록 하겠습니다.</p>

<ol>
  <li>모집단과 표본집단</li>
  <li>중심극한정리</li>
  <li></li>
</ol>

<hr />

<p><strong class="subtitle2_fontAwesome">모집단과 표본집단</strong></p>

<p>통계학의 가장 기본은 모집단과 표본집단의 이해라고 할 수 있습니다. 고등학교에서
처음 수학을 배울 때 1장이 집합인데 그런 정도의 개념이라고 보시면 됩니다.</p>

<p>그럼 용어부터 하나씩 알아보도록 하죠.</p>

<blockquote>
  <p>모집단(<code class="highlighter-rouge">population</code>) : 정보를 얻고자하는 관심 대상의 전체 집합</p>
</blockquote>

<p>이런 모집단은 매우 추상적이고 실제로 정확히 알 수 없는 경우(우주에 있는 모든 별)가 있습니다. 
때로는 직관적이고 실제로 알 수 있는 경우도 존재(우리나라의 인구)합니다.</p>

<p>간단하게 상상속의 모집단을 하나 가정해보죠. 달에 사는 토끼 정도가 적당할 거 같습니다. 
달에 토끼가 150마리 산다고 가정하겠습니다.</p>

<p>우리에게 주어진 건 각 토끼의 키를 이용한 분포입니다. 아래 그림처럼 말이죠.</p>

<p><img src="assets/built/images/python-statistics-sample3.png" alt="모집단-statistics_3" /></p>

<p>어떤 집단의 분포는 수학적으로 잘 알려진 분포를 따릅니다. 그 중 가장 잘 알려진 분포가 바로
정규분포(<code class="highlighter-rouge">Normal Distribution</code>) 혹은 가우스분포(<code class="highlighter-rouge">Gaussian Distribution</code>)라고 
불리는 분포입니다.</p>

<p>우리가 잘 알다시피 정규분포는 평균값과 표준편차 값을 이용하면 전체적인 형태를 파악할 수 있습니다.</p>

<p>이처럼 모집단의 전체 데이터에 대해 알지 못하더라도 수학적으로 그 분포를 기술할 수 있는
특성값들을 알 수 있다면 얼추 비슷하게 모집단의 특성을 통계적으로 확인할 수 있습니다.</p>

<p>이러한 특성값들을 우리는 모수(<code class="highlighter-rouge">Parameter</code>)라고 부릅니다. 
대표적인 모수로는 평균, 분산, 표준편차, 분위수 등이 있습니다.</p>

<p>아하..그러니까 우리는 모집단의 전체 데이터를 얻을 수 없으니 모집단의 특성을 나타내는
모수를 파악하여 모집단의 특성을 파악하려 한다는 것이군요!</p>

<p>자 그러면 이 모수(Parameter)를 잘 추정하려면 어떻게 해야 할까요??</p>

<p>이를 알아보기 위해 다른 개념을 조금 더 알아보도록 하겠습니다.</p>

<blockquote>
  <p>표본(<code class="highlighter-rouge">sample</code>) : 모집단의 부분집합. 모집단의 모수(parameter)를 추정하기 위해서 추출</p>
</blockquote>

<p>표본을 추출하는 가장 현실적인 이유는 모집단 전체에 대한 검사를 하기에는 시간적, 
금전적 비용이 너무 크기 때문입니다. 전수조사는 너무 힘든일이예요.</p>

<p>추출된 표본들을 통계적으로 기술하기 위해 통계적 특징을 나타내는 수치를 만들어 두면
편할 듯 합니다. 모수(parameter)와 마찬가지로 표본으로부터도 그 분포의 특성을
나타내는 표본 통계량을 계산할 수 있습니다.</p>

<p>대표적인 표본 통계량은 표본 평균, 표본 표준편차, 표본 비율 등이 있습니다.</p>

<p>그런데 문제가 있습니다. 표본을 추출할 때 랜덤하게 추출한다고 가정하면, 
표본은 추출할 때 마다 매번 다른 값들로 구성됩니다. 그렇다는 말은
표본들이 매번 추출될 때마다 표본 통계량도 그때 그때 변하게 된다는 의미입니다.</p>

<p>맞습니다. 표본 통계량은 모수(parameter)의 추정치로 볼 수 있으며 추정된 값은
항상 오차(<code class="highlighter-rouge">error</code>)를 수반하게 됩니다.</p>

<blockquote>
  <p>표준 오차 : 표본 통계량의 표준 편차.</p>
</blockquote>

<p>표본은 매번 추출될 때 마다 값이 변경되게 되는데 이 때문에 표본 통계량도 매번 그 값에
변동(오차)이 생기게 됩니다.</p>

<p>위 달나라 토끼를 예로 들어 n=5(여기서 n은 1개의 표본안의 토끼수)인 표본을 100,000회 
추출하면서 매번 표본의 평균을 계산하여 이를 이용하여 
평균의 표준오차(<code class="highlighter-rouge">Standard Error of Mean, SEM</code>)를 계산해보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>


<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="c"># 모집단</span>
<span class="c"># 토끼의 키는 10 ~ 20 사이의 정수라고 가정.</span>
<span class="c"># 총 150개의 데이터를 추출. </span>

<span class="n">population</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">21</span><span class="p">,(</span><span class="mi">150</span><span class="p">,))</span>  <span class="c"># 균등분포로 정수추출</span>
                                              <span class="c"># 굳이 정규분포가 아니라도 큰 상관이 없다.</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">population</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="c"># n=5</span>
<span class="c"># 표본 100,000개 추출하면서 매번 표본의 평균을 계산</span>
<span class="n">sample_space</span> <span class="o">=</span> <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">population</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">100000</span><span class="p">)]</span>

<span class="n">ax2</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">sample_space</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="c"># 표본(의) 평균의 평균을 구해보자.</span>
<span class="n">sample_mean</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">sample_space</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'표본(의) 평균의 평균 : {}'</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">sample_mean</span><span class="p">))</span>   <span class="c"># 15.077999999999998</span>

<span class="c"># 분산(variance)은 관측값에서 평균을 뺀 값을 제곱하고, </span>
<span class="c"># 그것을 모두 더한 후 전체 개수로 나눠서 구한다. </span>
<span class="c"># 표준편차는 그렇게 나온 값의 제곱근을 의미한다. </span>

<span class="n">sample_var</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">var</span><span class="p">(</span><span class="n">sample_space</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">sample_std</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">sample_space</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'표본(의) 평균의 분산 : {}, 표본(의) 평균의 표준편차 : {}'</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">sample_var</span><span class="p">,</span><span class="n">sample_std</span><span class="p">))</span>


<span class="n">sem</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">population</span><span class="p">)</span> <span class="o">/</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'표본(의) 평균의 표준편차(표준오차 : SEM) = 모표준편차 / n의 제곱근'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'수식을 이용한 표본(의) 평균의 표준편차 : {}'</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">sem</span><span class="p">))</span>


<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c"># 표본(의) 평균의 평균 : 15.308522</span>
<span class="c"># 표본(의) 평균의 분산 : 2.0940881755159997, 표본(의) 평균의 표준편차 : 1.4470964637908559</span>
<span class="c"># 표본(의) 평균의 표준편차(표준오차 : SEM) = 모표준편차 / n의 제곱근</span>
<span class="c"># 수식을 이용한 표본(의) 평균의 표준편차 : 1.4458646010067624</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-statistics-sample4.png" alt="표준오차-statistics_4" /></p>

<p>간단히 정리를 하면,</p>

<p>표준 편차는 모집단의 분포가 얼마나 퍼져있는가를 서술하는 개념이고,<br />
표준 오차(SEM)는 평균의 추정치에 대한 불확실도를 수치화한것입니다. 보통의 경우 
결과를 보는 사람의 입장에서는 모집단에 관심있는 경우가 더 많으므로 
데이터에 관해 기술할 때는 표준오차가 아닌 표준 편차를 사용해 기술하는게 맞습니다.</p>

<p>그럼에도 표준오차를 사용하는 이유는..표준오차값이 표준편차보다 작아서 더 결과가 
좋게 보이기 때문이죠. 하지만 잘못된 사용입니다.</p>

<hr />

<p><strong class="subtitle2_fontAwesome">중심극한정리(Central Limit Theorem)</strong></p>

<p>중심극한정리(<code class="highlighter-rouge">Central Limit Theorem</code>)를 이해하기 위해서는 먼저 모집단에서
표본을 뽑아 그 표본의 평균을 추출하는 과정에 대한 이해가 되어야 합니다.</p>

<p>코드와 그래프로 살펴봐야 할 듯 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>


<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c"># 모집단</span>
<span class="c"># 160 ~ 200 사이의 정수값을 랜덤하게 도출해서 모집단을 생성.</span>
<span class="c"># 총 500개의 데이터를 추출. </span>

<span class="n">population</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">160</span><span class="p">,</span><span class="mi">201</span><span class="p">,(</span><span class="mi">500</span><span class="p">,))</span>  <span class="c"># 균등분포로 정수추출</span>

<span class="c"># print(population)</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">population</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="c"># 이 모집단에서 크기가 5인 샘플을 추출해 추출된 값의 평균을 계산</span>
<span class="c"># 이 작업을 10000번 반복해서 나온 값들을 이용해 histogram을 그려보자</span>

<span class="n">sample_space</span> <span class="o">=</span> <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">population</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">)]</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">sample_space</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-statistics-sample1.png" alt="중심극한정리-statistics_1" /></p>

<p>위의 그림에서 보듯이 모집단의 형태는 균등분포입니다. 그 모집단에서 표본을 추출하여 그 
표본의 평균(표본 평균)을 이용하여 그래프를 그리면 정규분포가 되는것을 볼 수 있습니다.</p>

<p>이제 중심극한정리의 내용을 살펴보죠.</p>

<blockquote>
  <p>모집단이 평균이 μ 이고 표준편차가 σ 인 임의의 분포를 이룬다고 가정 할때,
이 모집단으로부터 추출된 표본의 크기 n이 충분히 크다면 표본 평균이 이루는
분포는 평균이 μ 이고 표준편차가 σ / √n 인 정규분포 에 근접한다.</p>
</blockquote>

<p>위에서 우리가 코드로 구현하고 그래프로 확인한 내용이 바로 위에 있는 내용입니다.</p>

<p>그러면 왜 이런 중심극한정리가 중요한 걸까요? 이런 사실을 우리가 왜 알아야 할까요?</p>

<p>사실 중심극한정리는 표본 수집을 기반으로 하는 추리통계에서 아주 중요한 이론적 근거를
제시하기 때문입니다. 이 말을 좀 쉽게 풀어쓰면 다음과 같습니다.</p>

<blockquote>
  <p>모집단이 어떤 분포를 가지고 있던지 상관없이 일단 표본의 크기가 충분히 크다면
표본평균들의 분포가 모집단의 모수를 기반으로한 정규분포를 이룬다는 점을 이용해서
특정 사건이 일어날 확률값을 계산할 수 있습니다.</p>
</blockquote>

<p>조금 어렵게 말하면 중심극한정리는 표본평균이 이루는 표본 분포와 모집단의 관계를 증명한
것으로 수집한 표본의 통계량을 이용하여 모집단의 모수를 추정할 수 있는 수학적 근거를
마련해 준다고 할 수 있습니다.</p>

<p><img src="assets/built/images/python-statistics-sample2.png" alt="중심극한정리-statistics_2" /></p>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(11) - matplotlib</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-matplotlib</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-13T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-matplotlib</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">데이터 시각화 - matplotlib</strong></p>

<p>데이터 분석에서 다루는 데이터는 그 종류도 다양하고 무엇보다도 그 크기가 상당합니다. 이런
데이터의 구조나 패턴을 파악해 데이터에 대한 통찰력을 얻기 위해서는 시각화 도구가 필수입니다.</p>

<p>pandas는 내부에 데이터 시각화를 위한 도구를 내장하고 있지만 풍부한 편이 아니기 때문에
다른 전문화 도구를 사용하는게 좋습니다.</p>

<p><code class="highlighter-rouge">matplotlib</code>은 python의 표준 시각화 도구라고 할 수 있을 정도로 2D 평면 그래프에 대한
다양한 포맷과 기능을 지원합니다. 여러가지 형태의 정형화된 plot뿐 아니라
다양한 시각화 기능을 제공합니다.</p>

<p>matplotlib으로 자주 사용되는 plot은 다음과 같습니다.</p>

<ul>
  <li><code class="highlighter-rouge">line plot</code> (선 그래프)</li>
  <li><code class="highlighter-rouge">area plot</code> (면적 그래프)</li>
  <li><code class="highlighter-rouge">scatter plot</code> (산점도)</li>
  <li><code class="highlighter-rouge">bar chart</code> (막대 그래프)</li>
  <li><code class="highlighter-rouge">histogram</code> (히스토그램)</li>
  <li><code class="highlighter-rouge">box plot</code> (박스 플롯)</li>
</ul>

<p>우리가 matplotlib을 사용할 때 일반적으로 pyplot이라는 서브패키지를 많이 사용합니다. 이 package는
<code class="highlighter-rouge">matlab</code>의 시각화 명령을 거의 그대로 사용할 수 있도록 matplotlib의 하위 API를 wrapping한 명령어 집합을
제공합니다. 쉽게 말해 간단한 시각화 기능을 이용할 경우 pyplot package를 이용하는 것 만으로도 충분하다는
의미입니다.</p>

<p>일반적으로 <code class="highlighter-rouge">matplotlib</code>의 alias는 <code class="highlighter-rouge">mpl</code>을 사용하고 <code class="highlighter-rouge">pyplot</code> 서브패키지는 <code class="highlighter-rouge">plt</code>라는 alias를 이용합니다.</p>

<hr />

<p><strong class="subtitle2_fontAwesome">line plot</strong></p>

<p><code class="highlighter-rouge">line plot</code>(선 그래프)는 가장 간단한 plot입니다. 
연속하는 데이터의 값들을 직선 또는 곡선으로 연결하여 데이터의 값 사이의 관계를 표현합니다. 특히
시계열 데이터와 같이 연속적인 값의 변화와 패턴을 파악하는데 적합합니다.</p>

<p>간단한 코드를 이용해서 확인해 보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># plot의 제목 설정</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">"Line Plot"</span><span class="p">)</span>

<span class="c"># plot() 함수를 이용해 line plot을 그린다.</span>
<span class="c"># 이 때 x 축의 자료 위치 즉, 틱(tick)은 자동으로 0, 1, 2, 3 이 된다. </span>
<span class="c"># 만약 이 x tick 위치를 별도로 명시하고 싶다면 같은 길이의 리스트 혹은 배열 자료를 넣는다.</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">25</span><span class="p">])</span>
<span class="c"># plt.plot([10, 20, 30, 40], [1, 5, 12, 25])</span>

<span class="c"># show() 함수는 실제로 차트로 렌더링(rendering)하고 마우스 움직임 등의 </span>
<span class="c"># 이벤트를 기다리라는 함수입니다. </span>
<span class="c"># 주피터 노트북에서는 셀 단위로 플롯 명령을 자동 렌더링 해주므로 show 명령이 필요없지만 </span>
<span class="c"># 일반 파이썬 인터프리터로 가동되는 경우에는 꼭 필요하다.</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-lineplot.png" alt="matplotlib-lineplot" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">line plot 예제</strong></p>

<p>선 그래프를 그리기 위해 아래의 간단한 Excel 파일을 이용합니다. 통계청에서 제공한
시도 간 인구 이동 데이터셋입니다.</p>

<p><a href="/assets/downloads/lineplot_sample_data.zip" target="_blank">실습 Excel 파일(lineplot_sample_data.xlsx)</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Excel 파일 로딩을 위해 다음의 module을 설치</span>
<span class="c"># conda install openpyxl</span>

<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># Excel 데이터 로딩(시도별 전출입 인구수)</span>
<span class="c"># 먼저 Excel 파일을 열어보고 어떻게 DataFrame으로 변환되는지 확인</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/lineplot_sample_data.xlsx'</span><span class="p">)</span>

<span class="c"># 전출지별 column에 NaN(결치)가 포함되어 있다. Excel에서 DataFrame으로 변환 시 적절한 값을</span>
<span class="c"># 찾지 못해서 결치값이 발생했는데 이 NaN을 바로 앞의 행의 값으로 대치하는 코드를 이용하여</span>
<span class="c"># NaN을 처리한다.</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># 우리가 관심있는 데이터는 서울특별시에서 다른 지역으로 이동한 데이터이다.</span>
<span class="c"># '전출지별'에서 '서울특별시'라는 값을 갖는 데이터만 추출하여 DataFrame을 새로 생성한다. </span>
<span class="c"># 이때 '전입지별'에서 '서울특별시'라고 되어 있는 부분은 제외한다. </span>

<span class="n">bool_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전출지별'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'서울특별시'</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전입지별'</span><span class="p">]</span> <span class="o">!=</span> <span class="s">'서울특별시'</span><span class="p">)</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">bool_mask</span><span class="p">]</span>

<span class="c"># display(df_seoul)</span>

<span class="c"># 결과로 나온 DataFrame에서 </span>
<span class="c"># '전출지별' 열을 삭제한 후 '전입지별' 열의 이름을 '전입지'로 변경하고 </span>
<span class="c"># '전입지' 열을 DataFrame의 행 index로 설정한다.</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전출지별'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'전입지별'</span><span class="p">:</span><span class="s">'전입지'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'전입지'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># display(df_seoul)</span>

<span class="c"># 선 그래프로 그릴 내용은 서울에서 경기도로 전입한 사람의 연도별 추이다.</span>

<span class="c"># DataFrame에서 전입지가 '경기도'인 행을 선택해서 Series를 얻는다. </span>

<span class="n">s</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'경기도'</span><span class="p">]</span>

<span class="c"># 해당 데이터로 line plot을 그리는데 x축은 Series의 index를 이용하고 </span>
<span class="c"># y축은 데이터의 값을 사용한다.</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
<span class="c"># plt.plot(s) # Series인 경우 이렇게 해도 된다.</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample1.png" alt="matplotlib-예제1" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">한글 폰트 설정</strong></p>

<p>matplotlib 사용 시 한글을 title 같은 곳에 지정하면 한글이 깨지는 현상이 발생합니다. 
한글 폰트를 적용해야 정상적으로 한글이 출력됩니다.</p>

<p>한글폰트는 아래의 링크에서 받으셔서 사용하시면 됩니다.</p>

<p><a href="/assets/downloads/malgun.zip" target="_blank">MS 맑은고딕 폰트</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 필요한 패키지와 라이브러리를 가져옴</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.font_manager</span> <span class="k">as</span> <span class="n">fm</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">rc</span>

<span class="kn">import</span> <span class="nn">warnings</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="c"># 그래프에서 마이너스(-) 폰트 깨지는 문제에 대한 대처</span>
<span class="n">mpl</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>

<span class="c"># 데이터는 위에서 작업한 서울특별시에서 경기도로 전입한 연도별 인구 데이터를</span>
<span class="c"># 사용합니다. </span>

<span class="c"># 한글폰트 사용시 한글 출력안됨!</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 경기 인구 이동'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'연도'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c"># 폰트를 사용하는 방법은 사실 몇 가지 형태가 있습니다. </span>
<span class="c"># 여기서는 FontProperties를 사용하는 방법에 대해서 알아보겠습니다. </span>

<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">fm</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 경기 인구 이동'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'연도'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>


<span class="c"># # 참고</span>
<span class="c"># # matplotlib.rcParams[]으로 전역글꼴 설정 방법</span>
<span class="c"># plt.rcParams["font.size"] = 20</span>
<span class="c"># plt.rcParams["figure.figsize"] = (10,4)</span>
<span class="c"># plt.rc('font', family=font_name)</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample2.png" alt="matplotlib-예제2" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">스타일 지정</strong></p>

<p>plot 함수는 보는 사람이 그림을 더 알아보기 쉽도록 다양한 style을 지원합니다. 
내용이 많으니 아래의 코드를 통해서 하나씩 알아보도록 하죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 필요한 패키지와 라이브러리를 가져옴</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.font_manager</span> <span class="k">as</span> <span class="n">fm</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="c"># 그래프에서 마이너스(-) 폰트 깨지는 문제에 대한 대처</span>
<span class="n">mpl</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">fm</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># 데이터는 위에서 작업한 서울특별시에서 경기도로 전입한 연도별 인구 데이터를</span>
<span class="c"># 사용합니다. </span>

<span class="c"># 그래프의 스타일 서식을 지정합니다.</span>
<span class="c"># 사용할 수 있는 서식은 matplotlib API reference를 참조.</span>
<span class="c"># print(plt.style.available)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="c"># 그래프의 그림 크기를 지정합니다. (단위는 인치로 가로, 세로 순으로 지정)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="c"># x축 눈금이 읽기 어렵기 때문에 label을 회전시킨다.</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="s">'vertical'</span><span class="p">)</span>

<span class="c"># 데이터를 plot 함수에 입력(마커표시 포함)</span>

<span class="c"># 데이터 위치를 나타내는 기호를 마커(marker)라고 합니다. </span>
<span class="c"># 자주 사용되는 마커는 다음과 같습니다.</span>
<span class="c"># .(point marker), ,(pixel marker), o(circle marker), </span>
<span class="c"># v(triangle_down marker), s(square marker),</span>
<span class="c"># p(pentagon marker), *(star marker), +(plus marker), </span>
<span class="c"># x(x marker), D(diamond marker), d(thin_diamond marker)</span>

<span class="c"># 색깔을 지정하는 방법은 색 이름 혹은 약자를 사용하거나 </span>
<span class="c"># # 문자로 시작되는 RGB코드를 사용할 수 있습니다.</span>
<span class="c"># blue(b), green(g), red(r), cyan(c),magenta(m), </span>
<span class="c"># yellow(y) black(k), white(w)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
         <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span>
         <span class="n">markersize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>
         <span class="n">markerfacecolor</span><span class="o">=</span><span class="s">'g'</span><span class="p">,</span>
         <span class="n">color</span><span class="o">=</span><span class="s">'r'</span><span class="p">,</span>
         <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 경기 인구 이동'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'연도'</span><span class="p">)</span>

<span class="c"># 범례표시</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">labels</span><span class="o">=</span><span class="p">[</span><span class="s">'서울 -&gt; 경기'</span><span class="p">],</span> <span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="c"># 그래프에 설명을 붙이는 주석도 추가한다.</span>
<span class="c"># annotate() 함수를 이용하게되는데 arrowprops를 이용하면 텍스트대신</span>
<span class="c"># 화살표를 이용할 수 있다. </span>
<span class="c"># 일단 주석을 넣을 공간을 확보하기 위해서 y축 범위를 조금 늘려준 후</span>
<span class="c"># annotate() 함수로 주석을 달아보자.</span>

<span class="n">plt</span><span class="o">.</span><span class="n">ylim</span><span class="p">(</span><span class="mi">5000</span><span class="p">,</span> <span class="mi">800000</span><span class="p">)</span>

<span class="c"># 주석 - 화살표</span>
<span class="n">plt</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">""</span><span class="p">,</span>
             <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">620000</span><span class="p">),</span>     <span class="c"># 화살표의 머리부분 (끝점) x좌표는 index, y좌표는 값을 이용</span>
             <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">290000</span><span class="p">),</span>  <span class="c"># 화살표의 꼬리부분 (시작점)</span>
             <span class="n">xycoords</span><span class="o">=</span><span class="s">'data'</span><span class="p">,</span>    <span class="c"># 좌표체계</span>
             <span class="n">arrowprops</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">arrowstyle</span><span class="o">=</span><span class="s">'-&gt;'</span><span class="p">,</span>
                             <span class="n">color</span><span class="o">=</span><span class="s">'skyblue'</span><span class="p">,</span>
                             <span class="n">lw</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
             <span class="p">)</span>    


<span class="n">plt</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">""</span><span class="p">,</span>
             <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mi">47</span><span class="p">,</span><span class="mi">450000</span><span class="p">),</span>     <span class="c"># 화살표의 머리부분 (끝점) x좌표는 index, y좌표는 값을 이용</span>
             <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span><span class="mi">580000</span><span class="p">),</span>  <span class="c"># 화살표의 꼬리부분 (시작점)</span>
             <span class="n">xycoords</span><span class="o">=</span><span class="s">'data'</span><span class="p">,</span>    <span class="c"># 좌표체계</span>
             <span class="n">arrowprops</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">arrowstyle</span><span class="o">=</span><span class="s">'-&gt;'</span><span class="p">,</span>
                             <span class="n">color</span><span class="o">=</span><span class="s">'olive'</span><span class="p">,</span>
                             <span class="n">lw</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
             <span class="p">)</span>    

<span class="c"># 주석표시 - 텍스트</span>

<span class="n">plt</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">'인구 이동 증가(1970-1995)'</span><span class="p">,</span>   <span class="c"># 텍스트입력</span>
             <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">350000</span><span class="p">),</span>               <span class="c"># 텍스트위치 기준점</span>
             <span class="n">rotation</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span>                  <span class="c"># 텍스트회전 각도</span>
             <span class="n">va</span><span class="o">=</span><span class="s">'baseline'</span><span class="p">,</span>                <span class="c"># 텍스트 상하 정렬</span>
             <span class="n">ha</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span>                  <span class="c"># 텍스트 좌우 정렬</span>
             <span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span>
            <span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">'인구 이동 감소(1995-2017)'</span><span class="p">,</span>   <span class="c"># 텍스트입력</span>
             <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mi">40</span><span class="p">,</span><span class="mi">500000</span><span class="p">),</span>               <span class="c"># 텍스트위치 기준점</span>
             <span class="n">rotation</span><span class="o">=-</span><span class="mi">11</span><span class="p">,</span>                  <span class="c"># 텍스트회전 각도</span>
             <span class="n">va</span><span class="o">=</span><span class="s">'baseline'</span><span class="p">,</span>                <span class="c"># 텍스트 상하 정렬</span>
             <span class="n">ha</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span>                  <span class="c"># 텍스트 좌우 정렬</span>
             <span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span>
            <span class="p">)</span>

<span class="c"># 변경사항을 저장하고 그래프 표시</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample3.png" alt="matplotlib-예제3" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Figure, Axes, Axis</strong></p>

<p>matplotlib이 그리는 그림은 Figure객체, Axes객체, Axis객체로 구성됩니다.</p>

<p>Figure객체는 그림이 그려지는 canvas를 의미합니다. Figure객체는 한 개 이상의 
Axes 객체를 포함하며, Axes 객체는 다시 두 개 이상의 Axis 객체를 포함합니다.</p>

<p>모든 그림은 Figure 객체입니다. 하나의 Figure는 하나의 아이디 숫자와 window를 가지는데 
jupyter notebook에서는 window객체가 생성되지 않지만 python을 독립 실행하는 경우 
하나의 Figure당 하나의 window를 별도로 가지게 됩니다.</p>

<p>Figure객체를 얻기 위해서는 <code class="highlighter-rouge">figure()</code> 함수를 이용해야 합니다. 하지만 일반적으로 
plot 명령을 이용하면 자동으로 Figure를 생성해주기 때문에 일반적으로 <code class="highlighter-rouge">figure()</code> 함수를 
잘 사용하지 않습니다. <code class="highlighter-rouge">figure()</code> 함수를 명시적으로 사용하는 경우는 여러개의 window를 
동시에 띄워야 하거나 그림의 크기를 설정하고 싶을때 사용합니다.</p>

<p>하나의 window안에 여러개의 plot을 배열 형태로 출력해야 하는 경우도 있습니다. 
Figure 객체 안에 있는 각각의 plot은 Axes라고 불리는 객체에 속합니다.</p>

<p>Axes 객체를 생성하려면 원래는 <code class="highlighter-rouge">subplot</code> 함수를 사용해서 명시적으로 Axes 객체를 얻어야 합니다. 
또한 plot 함수를 사용하면 자동으로 Axes 객체를 생성해 줍니다.</p>

<p><code class="highlighter-rouge">subplot</code>은 그리드 형태의 Axes 객체들을 생성합니다.</p>

<p>이 <code class="highlighter-rouge">subplots</code> 함수를 이용하면 복수의 Axes 객체를 동시에 생성할 수도 있습니다. 
이때는 2차원 ndarray 형태로 Axes 객체가 반환됩니다.</p>

<p>하나의 <code class="highlighter-rouge">Axes</code> 객체는 두 개 이상의 <code class="highlighter-rouge">Axis</code> 객체를 가질 수 있습니다. 
<code class="highlighter-rouge">Axis</code> 객체는 plot의 가로축이나 세로축을 나타내는 객체입니다.</p>

<p>여러가지 plot을 하나의 Axes 객체에 표시할 때 y값의 크기가 달라서 표시하기 힘든 경우가 
종종있습니다. 이 때는 <code class="highlighter-rouge">twinx()</code> 함수를 이용해 복수의 y 축을 가진 plot을 만들수 있습니다.
<code class="highlighter-rouge">twinx</code> 명령은 x축을 공유하는 새로운 <code class="highlighter-rouge">Axes</code> 객체를 만들어줍니다.</p>

<p>그러면 코드를 이용해서 하나하나 살펴보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 필요한 패키지와 라이브러리를 가져옴</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.font_manager</span> <span class="k">as</span> <span class="n">fm</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">rc</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="c"># 그래프에서 마이너스(-) 폰트 깨지는 문제에 대한 대처</span>
<span class="n">mpl</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">fm</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="c"># 데이터는 위에서 작업한 서울특별시에서 경기도로 전입한 연도별 인구 데이터를</span>
<span class="c"># 사용합니다. </span>

<span class="c"># 그래프의 스타일 서식을 지정합니다.</span>
<span class="c"># 사용할 수 있는 서식은 matplotlib API reference를 참조.</span>
<span class="c"># print(plt.style.available)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="c"># 그래프의 그림 크기를 지정합니다. (단위는 인치로 가로, 세로 순으로 지정)</span>
<span class="c">#  figure에 2개의 subplot을 생성합니다. </span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax2</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'서울 -&gt; 경기 인구 이동'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'기간'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>


<span class="n">ax1</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">,</span> <span class="s">'o'</span><span class="p">,</span> <span class="n">markersize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>  <span class="c"># 선을 그리지 않고 점으로만 표시</span>

<span class="n">ax2</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
         <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span>
         <span class="n">markersize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>
         <span class="n">markerfacecolor</span><span class="o">=</span><span class="s">'g'</span><span class="p">,</span>
         <span class="n">color</span><span class="o">=</span><span class="s">'r'</span><span class="p">,</span>
         <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span>
         <span class="n">label</span><span class="o">=</span><span class="s">'서울 -&gt; 경기'</span><span class="p">)</span>

<span class="n">ax2</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">50000</span><span class="p">,</span> <span class="mi">800000</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">50000</span><span class="p">,</span> <span class="mi">800000</span><span class="p">)</span>

<span class="c"># 축 눈금 label 지정 및 회전</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">75</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">75</span><span class="p">)</span>

<span class="c"># 축 눈금 label 크기</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s">'x'</span><span class="p">,</span> <span class="n">labelsize</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="c"># 변경사항을 저장하고 그래프 표시</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample4.png" alt="matplotlib-예제4" /></p>

<p>하나의 Axes에 여러 개의 그래프를 추가하는 것도 가능합니다. 이번에는
데이터를 조금 바꿔서 서울특별시에서 충청남도, 경상북도, 강원도로 이동한 인구 변화 그래프 3개를
하나의 같은 화면에 그려보도록 하겠습니다.</p>

<p>데이터를 만들기 위해 python의 <code class="highlighter-rouge">map()</code> 함수가 사용됩니다. 
map은 리스트의 요소를 지정된 함수로 처리해주는 함수입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Excel 파일 로딩을 위해 다음의 module을 설치</span>
<span class="c"># conda install openpyxl</span>

<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/lineplot_sample_data.xlsx'</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">)</span>

<span class="n">bool_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전출지별'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'서울특별시'</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전입지별'</span><span class="p">]</span> <span class="o">!=</span> <span class="s">'서울특별시'</span><span class="p">)</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">bool_mask</span><span class="p">]</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전출지별'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'전입지별'</span><span class="p">:</span><span class="s">'전입지'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'전입지'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># 서울에서 충청남도, 경상북도, 강원도로 이동한 이구 데이터 값만 추출</span>
<span class="n">col_year</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span><span class="mi">2018</span><span class="p">)))</span>
<span class="c"># print(col_year)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">loc</span><span class="p">[[</span><span class="s">'충청남도'</span><span class="p">,</span> <span class="s">'경상북도'</span><span class="p">,</span> <span class="s">'강원도'</span><span class="p">],</span> <span class="n">col_year</span><span class="p">]</span>

<span class="c"># display(new_df)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">col_year</span><span class="p">,</span> <span class="n">new_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'충청남도'</span><span class="p">,:],</span> <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span><span class="n">markerfacecolor</span><span class="o">=</span><span class="s">'green'</span><span class="p">,</span>
         <span class="n">markersize</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'olive'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'서울 -&gt; 충남'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">col_year</span><span class="p">,</span> <span class="n">new_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'경상북도'</span><span class="p">,:],</span> <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span><span class="n">markerfacecolor</span><span class="o">=</span><span class="s">'blue'</span><span class="p">,</span>
         <span class="n">markersize</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'skyblue'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'서울 -&gt; 경남'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">col_year</span><span class="p">,</span> <span class="n">new_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'강원도'</span><span class="p">,:],</span> <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span><span class="n">markerfacecolor</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span>
         <span class="n">markersize</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'magenta'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'서울 -&gt; 강원'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 충청남도, 경상북도, 강원도 인구 이동'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'기간'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="s">'vertical'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">ylim</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">70000</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c"># 참고(matplotlib의 color)</span>

<span class="c"># import matplotlib</span>

<span class="c"># colors = {}  # dictionary (color명:HEX값)</span>

<span class="c"># for c_name, c_hex in matplotlib.colors.cnames.items():</span>
<span class="c">#     colors[c_name] = c_hex</span>
    
<span class="c"># print(colors)</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample5.png" alt="matplotlib-예제5" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Area Chart</strong></p>

<p>면적 그래프(area plot)는 각 열의 데이터를 선 그래프로 구현하는데, 선 그래프와 x축 사이의 
공간에 색을 입히는 개념입니다. 색의 투명도는 기본값이 0.5로 투과되어 보이게 됩니다.</p>

<p>위에서 살펴본 plot() 함수에 <code class="highlighter-rouge">kind=area</code> 설정을 추가하면 간단하게 구현할 수 있습니다. 
조심해야 할 점은 그래프를 그릴때 누적여부를 설정할 수 있는데 기본값이 ‘stacked=True’입니다.
즉, 누적그래프를 그린다는 것입니다. 이 경우 각 열의 패턴과 함께 전체의 합계가 어떻게 변하는지를
파악할 수 있습니다. 그래서 면적 그래프를 다른말로 누적 선 그래프(<code class="highlighter-rouge">stacked line plot</code>)이라고
하기도 합니다.</p>

<p>위에서 실습했던 데이터를 이용하여 이번에는 area plot을 그려보기로 하겠습니다. stacked 설정을
변경해서 한번 확인해보세요.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/lineplot_sample_data.xlsx'</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">)</span>

<span class="n">bool_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전출지별'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'서울특별시'</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전입지별'</span><span class="p">]</span> <span class="o">!=</span> <span class="s">'서울특별시'</span><span class="p">)</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">bool_mask</span><span class="p">]</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전출지별'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'전입지별'</span><span class="p">:</span><span class="s">'전입지'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'전입지'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># 서울에서 충청남도, 경상북도, 강원도로 이동한 이구 데이터 값만 추출</span>
<span class="n">col_year</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span><span class="mi">2018</span><span class="p">)))</span>
<span class="c"># print(col_year)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">loc</span><span class="p">[[</span><span class="s">'충청남도'</span><span class="p">,</span> <span class="s">'경상북도'</span><span class="p">,</span> <span class="s">'강원도'</span><span class="p">],</span> <span class="n">col_year</span><span class="p">]</span>

<span class="n">trans_new_df</span> <span class="o">=</span> <span class="n">new_df</span><span class="o">.</span><span class="n">transpose</span><span class="p">()</span>

<span class="c"># index를 정수형으로 변경</span>
<span class="n">trans_new_df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">trans_new_df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>

<span class="c"># display(trans_new_df)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="n">trans_new_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'area'</span><span class="p">,</span>
                  <span class="n">stacked</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>       <span class="c"># 그래프 누적 여부</span>
                  <span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span>
                  <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 충청남도, 경상북도, 강원도 인구 이동'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'기간'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="s">'vertical'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample6.png" alt="matplotlib-예제6" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Bar Chart</strong></p>

<p>막대 그래프(bar plot)는 데이터 값의 크기에 비례하여 높이를 갖는 직사각형 막대로 표현합니다. 
세로형과 가로형 두 가지가 존재하며 세로형인 경우 정보 제공 측면에서 보면 선 그래프와 큰 차이는
없습니다.</p>

<p>세로형 막대 그래프는 시간적으로 차이가 나는 두 점에서 데이터 값의 차이를 보다 잘 설명한다는
특징이 있습니다. 즉, 시계열 데이터를 표현하는데 적합하다고 생각하시면 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/lineplot_sample_data.xlsx'</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">)</span>

<span class="n">bool_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전출지별'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'서울특별시'</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전입지별'</span><span class="p">]</span> <span class="o">!=</span> <span class="s">'서울특별시'</span><span class="p">)</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">bool_mask</span><span class="p">]</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전출지별'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'전입지별'</span><span class="p">:</span><span class="s">'전입지'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'전입지'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># 서울에서 충청남도, 경상북도, 강원도로 이동한 이구 데이터 값만 추출</span>
<span class="n">col_year</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2010</span><span class="p">,</span><span class="mi">2018</span><span class="p">)))</span>
<span class="c"># print(col_year)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">loc</span><span class="p">[[</span><span class="s">'충청남도'</span><span class="p">,</span> <span class="s">'경상북도'</span><span class="p">,</span> <span class="s">'강원도'</span><span class="p">],</span> <span class="n">col_year</span><span class="p">]</span>

<span class="n">trans_new_df</span> <span class="o">=</span> <span class="n">new_df</span><span class="o">.</span><span class="n">transpose</span><span class="p">()</span>

<span class="c"># index를 정수형으로 변경</span>
<span class="n">trans_new_df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">trans_new_df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="n">trans_new_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'bar'</span><span class="p">,</span>
                  <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span>
                  <span class="n">width</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
                  <span class="n">color</span><span class="o">=</span><span class="p">[</span><span class="s">'orange'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'blue'</span><span class="p">])</span>

<span class="n">plt</span><span class="o">.</span><span class="n">ylim</span><span class="p">(</span><span class="mi">5000</span><span class="p">,</span> <span class="mi">30000</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 충청남도, 경상북도, 강원도 인구 이동'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'기간'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="s">'vertical'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample7.png" alt="matplotlib-예제7" /></p>

<p>가로형 막대 그래프는 각 변수 사이 값의 크기 차이를 설명하는데 적합합니다. <code class="highlighter-rouge">kind=barh</code> 설정을
통해 가로형 막대 그래프를 그릴 수 있습니다.</p>

<p>그럼 간단한 문제 하나만 그려보죠. 우리가 사용하는 데이터에서 2010~2017년의 기간동안
서울에서 각 시도로 이동한 인구의 합계를 구하여 시도별로 비교하는 
그래프를 그려보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/lineplot_sample_data.xlsx'</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">)</span>

<span class="n">bool_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전출지별'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'서울특별시'</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'전입지별'</span><span class="p">]</span> <span class="o">!=</span> <span class="s">'서울특별시'</span><span class="p">)</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">bool_mask</span><span class="p">]</span>

<span class="n">df_seoul</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전출지별'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'전입지별'</span><span class="p">:</span><span class="s">'전입지'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">df_seoul</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'전입지'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># 서울에서 충청남도, 경상북도, 강원도로 이동한 이구 데이터 값만 추출</span>
<span class="n">col_year</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2010</span><span class="p">,</span><span class="mi">2018</span><span class="p">)))</span>
<span class="c"># print(col_year)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df_seoul</span><span class="o">.</span><span class="n">loc</span><span class="p">[[</span><span class="s">'충청남도'</span><span class="p">,</span> <span class="s">'경상북도'</span><span class="p">,</span> <span class="s">'강원도'</span><span class="p">],</span> <span class="n">col_year</span><span class="p">]</span>

<span class="n">new_df</span><span class="p">[</span><span class="s">'합계'</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_df</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">sort_df</span> <span class="o">=</span> <span class="n">new_df</span><span class="p">[[</span><span class="s">'합계'</span><span class="p">]]</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'합계'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">sort_df</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>

<span class="n">sort_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span>
             <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span>
             <span class="n">width</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
             <span class="n">color</span><span class="o">=</span><span class="p">[</span><span class="s">'rebeccapurple'</span><span class="p">])</span>

<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'best'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'서울 -&gt; 충청남도, 경상북도, 강원도 인구 이동'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'기간'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'이동 인구수'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample8.png" alt="matplotlib-예제8" /></p>

<p>지금까지는 그래프를 그릴 때 y축을 하나만 사용했었습니다. Excel 처럼 보조 축을 추가하여 2개의
y축을 가지는 그래프는 어떻게 그릴 수 있을까요?</p>

<p>이번에는 조금 다른 데이터를 가지고 2개의 y축을 가지는 그래프를 그려보도록 하겠습니다.</p>

<p>사용할 데이터는 2018년 통계청에서 제공한 남북한 발전량 데이터셋입니다. 파일은 아래의 링크에서
다운로드 할 수 있습니다.</p>

<p><a href="/assets/downloads/korea_power_generation.zip" target="_blank">실습 Excel 파일(korea_power_generation.xlsx)</a></p>

<p>기본축에는 연도별 북한의 발전량을 막대그래프로 표현합니다. 
발전량은 화력과 수력발전량을 각각 누적 막대그래프로 표시하고 보조축에는 선 그래프를 표시합니다.
보조축의 선 그래프는 북한 발전량의 전년 대비 증감률을 백분률로 표시합니다.</p>

<p>이를 위해 excel 파일을 불려들여서 pandas DataFrame을 생성하고 데이터를 정리하는 작업이
먼저 선행되어야 합니다.</p>

<p>코드로 알아보도록 하죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>

<span class="c"># 한글폰트 설정</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'ggplot'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>  <span class="c"># 그래프에서 마이너스(-) 폰트 깨지는 문제에 대한 대처</span>


<span class="c"># Data Loading</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">'./data/korea_power_generation.xlsx'</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># 북한의 화력, 수력발전 데이터만 필요하기 때문에 slicing을 통해 데이터 추출</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">5</span><span class="p">:</span><span class="mi">7</span><span class="p">]</span>

<span class="c"># display(df)</span>

<span class="c"># 필요없는 column 제거 및 index 설정. </span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'전력량 (억㎾h)'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'발전 전력별'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">transpose</span><span class="p">()</span>   <span class="c"># x축이 연도가 되기 위해 전치행렬(행과 열을 교환)로 변환</span>

<span class="c"># display(df)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'합계'</span><span class="p">:</span><span class="s">'총발전량'</span><span class="p">})</span>

<span class="n">df</span><span class="p">[</span><span class="s">'총발전량-1년'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'총발전량'</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'증감률'</span><span class="p">]</span> <span class="o">=</span> <span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">'총발전량'</span><span class="p">]</span> <span class="o">/</span> <span class="n">df</span><span class="p">[</span><span class="s">'총발전량-1년'</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>


<span class="c"># 그래프 그리기</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span><span class="s">'수력'</span><span class="p">,</span> <span class="s">'화력'</span><span class="p">]]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'bar'</span><span class="p">,</span> 
                               <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span>
                               <span class="n">width</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
                               <span class="n">stacked</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">ax2</span> <span class="o">=</span> <span class="n">ax1</span><span class="o">.</span><span class="n">twinx</span><span class="p">()</span>

<span class="n">ax2</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s">'증감률'</span><span class="p">],</span> <span class="n">marker</span><span class="o">=</span><span class="s">'o'</span><span class="p">,</span> <span class="n">markersize</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span>
         <span class="n">color</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'전년대비 증감률(</span><span class="si">%</span><span class="s">)'</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="o">-</span><span class="mi">50</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span>

<span class="n">ax1</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'연도'</span><span class="p">)</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'발전량 (억㎾h)'</span><span class="p">)</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'전년대비 증감률(</span><span class="si">%</span><span class="s">)'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'북한 전력 발전량 (1990-2016)'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample9.png" alt="matplotlib-예제9" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Histogram</strong></p>

<p>Histogram은 변수가 하나인 단변수 데이터의 빈도수를 그래프로 표현하는 것입니다.</p>

<p>x축을 같은 크기의 여러 구간으로 나누고 각 구간에 속하는 데이터 값의 개수(빈도)를
y축에 표시합니다. 당연히 구간을 나느는 간격의 크기에 따라 빈도가 달라지고 histogram의
모양이 변하게 됩니다.</p>

<p>UCI 자동차 연비 데이터셋을 이용해 간단한 histogram을 그려보도록 하죠.</p>

<p><a href="/assets/downloads/auto-mpg.zip" target="_blank">실습 CSV 파일(auto-mpg.csv)</a></p>

<p>pandas로 해당 데이터를 살펴보면 column명이 들어있지 않다는 걸 알게됩니다.
각 column의 의미는 순서대로 다음과 같습니다.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
'MPG'(연비),
'Cylinders'(실린더 수),
'Displacement'(배기량),
'Horsepower'(출력),
'Weight'(차중),
'Acceleration'(가속능력),
'Model Year'(출시년도),
'Origin'(제조국),   # 1=USA, 2=EU, 3=JPN
'Name'(모델명)    

</code></pre></div></div>

<p>Histogram을 그리기 위해 다음의 코드를 살표보도록 하죠.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'classic'</span><span class="p">)</span>  <span class="c"># ggplot보다는 classic이 보기 편하다</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./data/auto-mpg.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># column이름 지정</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'MPG'</span><span class="p">,</span><span class="s">'Cylinders'</span><span class="p">,</span><span class="s">'Displacement'</span><span class="p">,</span><span class="s">'Horsepower'</span><span class="p">,</span><span class="s">'Weight'</span><span class="p">,</span><span class="s">'Acceleration'</span><span class="p">,</span>
              <span class="s">'Model Year'</span><span class="p">,</span><span class="s">'Origin'</span><span class="p">,</span><span class="s">'Name'</span><span class="p">]</span>

<span class="c"># display(df)</span>

<span class="c"># MPG(연비- miles per gallon) 열에 대한 histogram</span>

<span class="n">df</span><span class="p">[</span><span class="s">'MPG'</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'hist'</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'blue'</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'MPG Histogram'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'mpg'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample10.png" alt="matplotlib-예제10" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Scatter(산점도)</strong></p>

<p>산점도는 서로 다른 두 변수 사이의 관계를 나타냅니다. 2개의 연속 변수를 각각 x축과 
y축에 하나씩 놓고 데이터 값이 위치하는 (x,y) 좌표를 찾아서 점으로 표시합니다.</p>

<p>다음의 코드를 이용해 산점도를 그려보죠.</p>

<p>사용하는 데이터 셋은 위에서 사용했던 <code class="highlighter-rouge">MPG Data Set</code>입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'default'</span><span class="p">)</span>  

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./data/auto-mpg.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># column이름 지정</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'MPG'</span><span class="p">,</span><span class="s">'Cylinders'</span><span class="p">,</span><span class="s">'Displacement'</span><span class="p">,</span><span class="s">'Horsepower'</span><span class="p">,</span><span class="s">'Weight'</span><span class="p">,</span><span class="s">'Acceleration'</span><span class="p">,</span>
              <span class="s">'Model Year'</span><span class="p">,</span><span class="s">'Origin'</span><span class="p">,</span><span class="s">'Name'</span><span class="p">]</span>

<span class="n">df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'scatter'</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">'Weight'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'MPG'</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Scatter plot - MPG vs. Weight'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample11.png" alt="matplotlib-예제11" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Pie Chart</strong></p>

<p>파이 차트는 우리가 흔히 보는 그래프 형태로 원을 파이 조각처럼 나누어서 표현합니다. 조각의
크기는 해당 변수에 속하는 데이터 값의 크기에 비례합니다.</p>

<p>위의 <code class="highlighter-rouge">MPG Data Set</code>을 이용해서 <code class="highlighter-rouge">Origin</code>(제조국) 별 차량 생산량을 파이 차트로 표현해
보겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'default'</span><span class="p">)</span>  

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./data/auto-mpg.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># column이름 지정</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'MPG'</span><span class="p">,</span><span class="s">'Cylinders'</span><span class="p">,</span><span class="s">'Displacement'</span><span class="p">,</span><span class="s">'Horsepower'</span><span class="p">,</span><span class="s">'Weight'</span><span class="p">,</span><span class="s">'Acceleration'</span><span class="p">,</span>
              <span class="s">'Model Year'</span><span class="p">,</span><span class="s">'Origin'</span><span class="p">,</span><span class="s">'Name'</span><span class="p">]</span>


<span class="c"># 제조국에 따른 차량 개수 카운트를 위해 column을 하나 추가</span>
<span class="n">df</span><span class="p">[</span><span class="s">'count'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">df_origin</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Origin'</span><span class="p">)</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span>

<span class="c"># display(df_origin)</span>

<span class="n">df_origin</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'USA'</span><span class="p">,</span> <span class="s">'EU'</span><span class="p">,</span> <span class="s">'JPN'</span><span class="p">]</span>

<span class="c"># display(df_origin)</span>

<span class="n">df_origin</span><span class="p">[</span><span class="s">'count'</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'pie'</span><span class="p">,</span>
                        <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span>
                        <span class="n">autopct</span><span class="o">=</span><span class="s">'</span><span class="si">%1.1</span><span class="s">f</span><span class="si">%%</span><span class="s">'</span><span class="p">,</span>   <span class="c"># 퍼센트 % 표시</span>
                        <span class="n">startangle</span><span class="o">=</span><span class="mi">45</span><span class="p">,</span>       <span class="c"># 파이 조각을 나누는 시작점(각도)</span>
                        <span class="n">colors</span><span class="o">=</span><span class="p">[</span><span class="s">'red'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'blue'</span><span class="p">])</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Model Origin'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">axis</span><span class="p">(</span><span class="s">'equal'</span><span class="p">)</span>  <span class="c"># 파이 차트의 비율을 같게 조정(최대한 원에 가깝게 조정)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">labels</span><span class="o">=</span><span class="n">df_origin</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper right'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample12.png" alt="matplotlib-예제12" /></p>

<hr />

<p><strong class="subtitle2_fontAwesome">Boxplot</strong></p>

<p>Boxplot은 데이터의 분포를 파악하는데 이용됩니다. Boxplot의 특징 중 하나는 그래프상에
<code class="highlighter-rouge">outlier</code>가 같이 표현된다는 것입니다. 즉, 데이터에 이상치가 있는지를 쉽게 눈으로 파악할
수 있도록 해 줍니다.</p>

<p>Boxplot은 4분위값을 이용해서 아래의 그림처럼 표현됩니다.</p>

<p><img src="assets/built/images/python-matplotlib-boxplot.png" alt="matplotlib-boxplot-예제" /></p>

<p>Origin에 따른 연비분포를 Boxplot을 이용해서 그려보도록 하겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span><span class="p">,</span> <span class="n">rc</span>

<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">font_path</span> <span class="o">=</span> <span class="s">'./font/malgun.ttf'</span>
<span class="n">font_name</span> <span class="o">=</span> <span class="n">font_manager</span><span class="o">.</span><span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="n">font_path</span><span class="p">)</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
<span class="n">rc</span><span class="p">(</span><span class="s">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">font_name</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'seaborn-poster'</span><span class="p">)</span>  

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./data/auto-mpg.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>

<span class="c"># display(df)</span>

<span class="c"># column이름 지정</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'MPG'</span><span class="p">,</span><span class="s">'Cylinders'</span><span class="p">,</span><span class="s">'Displacement'</span><span class="p">,</span><span class="s">'Horsepower'</span><span class="p">,</span><span class="s">'Weight'</span><span class="p">,</span><span class="s">'Acceleration'</span><span class="p">,</span>
              <span class="s">'Model Year'</span><span class="p">,</span><span class="s">'Origin'</span><span class="p">,</span><span class="s">'Name'</span><span class="p">]</span>

<span class="n">plt</span><span class="o">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'Origin'</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">,</span><span class="s">'MPG'</span><span class="p">],</span>
               <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'Origin'</span><span class="p">]</span><span class="o">==</span><span class="mi">2</span><span class="p">,</span><span class="s">'MPG'</span><span class="p">],</span>
               <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'Origin'</span><span class="p">]</span><span class="o">==</span><span class="mi">3</span><span class="p">,</span><span class="s">'MPG'</span><span class="p">]],</span>
            <span class="n">labels</span><span class="o">=</span><span class="p">[</span><span class="s">'USA'</span><span class="p">,</span> <span class="s">'EU'</span><span class="p">,</span> <span class="s">'JPN'</span><span class="p">])</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'제조국가별 연비 분포'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="assets/built/images/python-matplotlib-plot-sample13.png" alt="matplotlib-예제13" /></p>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(10) - Pandas(Exercise)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-exercise</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-12T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-exercise</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 1</strong></p>

<p>Group Lens(미네소타 대학 컴퓨터과의 research lab)에서 수집한 영화 데이터를 이용해
데이터 분석을 해 보자.</p>

<p>영화의 선호 정보를 1~5사이의 점수로 표현 (5에 가까울수록 선호)</p>

<p><a href="https://grouplens.org/datasets/movielens/" target="_blank">Group Lens 사이트</a></p>

<p><a href="/assets/downloads/ml-latest-small.zip" target="_blank">사용할 데이터 파일</a></p>

<blockquote>
  <p><strong>pandas를 사용하여 다음의 문제를 해결합니다. 동률이 있을 경우 오름차순으로 정렬하여 출력합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">
1. 사용자가 평가한 모든 영화의 전체 평균 평점을 출력하세요.

2. 각 사용자별 평균 평점을 구하세요. 출력시 정렬은 userId로 오름차순 정렬합니다.

3. 각 영화별 평균 평점을 구하세요. 출력시 정렬은 movieId로 오름차순 정렬합니다. 

4. 평균 평점이 가장 높은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.

5. Comedy영화 중 가장 평점이 낮은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.

6. 2015년도에 평가된 모든 Romance 영화의 평균 평점은?

7. 모든 영화장르 중 사용자 평점이 가장 좋은 영화장르는 무엇인가요?

</code></pre>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
예상되는 정답.

1. 사용자가 평가한 모든 영화의 전체 평균 평점을 출력하세요.
   =&gt; 3.501556983616962



2. 각 사용자별 평균 평점을 구하세요. 출력시 정렬은 userId로 오름차순 정렬합니다.
   =&gt; userId
      1      4.366379
      2      3.948276
      3      2.435897
      4      3.555556
      5      3.636364
               ...   
      606    3.657399
      607    3.786096
      608    3.134176
      609    3.270270
      610    3.688556
      Name: rating, Length: 610, dtype: float64



3. 각 영화별 평균 평점을 구하세요. 출력시 정렬은 movieId로 오름차순 정렬합니다.
   =&gt; 	movieId	title	rating
      0	1	Toy Story (1995)	3.920930
      1	2	Jumanji (1995)	3.431818
      2	3	Grumpier Old Men (1995)	3.259615
      3	4	Waiting to Exhale (1995)	2.357143
      4	5	Father of the Bride Part II (1995)	3.071429
      ...	...	...	...
      9737	193581	Black Butler: Book of the Atlantic (2017)	4.000000
      9738	193583	No Game No Life: Zero (2017)	3.500000
      9739	193585	Flint (2017)	3.500000
      9740	193587	Bungo Stray Dogs: Dead Apple (2018)	3.500000
      9741	193609	Andrew Dice Clay: Dice Rules (1991)	4.000000
      
      9724 rows × 3 columns



4. 평균 평점이 가장 높은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.
   =&gt; 	movieId	title	rating
      5690	27751	'Salem's Lot (2004)	5.0
      7332	77846	12 Angry Men (1997)	5.0
      9046	141816	12 Chairs (1976)	5.0
      3893	5468	20 Million Miles to Earth (1957)	5.0
      5639	27373	61* (2001)	5.0
      ...	...	...	...
      9711	187717	Won't You Be My Neighbor? (2018)	5.0
      8355	108795	Wonder Woman (2009)	5.0
      9289	158398	World of Glory (1991)	5.0
      9560	173351	Wow! A Talking Fish! (1983)	5.0
      7521	84273	Zeitgeist: Moving Forward (2011)	5.0
      296 rows × 3 columns



5. Comedy영화 중 가장 평점이 낮은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.
   =&gt; 	movieId	title	genres
      8893	134528	Aloha (2015)	Comedy|Drama|Romance
      5777	31422	Are We There Yet? (2005)	Children|Comedy
      7762	91414	Arthur Christmas (2011)	Animation|Children|Comedy|Drama
      9419	165645	Bad Santa 2 (2016)	Comedy
      4439	6557	Born to Be Wild (1995)	Adventure|Children|Comedy|Drama
      5409	25782	Boudu Saved From Drowning (Boudu sauvé des eau...	Comedy
      6554	54934	Brothers Solomon, The (2007)	Comedy
      5453	26095	Carabineers, The (Carabiniers, Les) (1963)	Comedy|Drama|War
      6545	54768	Daddy Day Camp (2007)	Children|Comedy
      4881	7312	Follow Me, Boys! (1966)	Comedy|Drama
      7553	85334	Hard Ticket to Hawaii (1987)	Action|Comedy
      8417	110773	Haunted House 2, A (2014)	Comedy|Horror
      5662	27595	Jesus Christ Vampire Hunter (2001)	Action|Comedy|Horror|Musical
      8984	138798	Joe Dirt 2: Beautiful Loser (2015)	Comedy
      7820	92681	Journey 2: The Mysterious Island (2012)	Action|Adventure|Comedy|Sci-Fi|IMAX
      6160	44243	Leprechaun 4: In Space (1997)	Comedy|Fantasy|Horror|Sci-Fi
      8248	104644	Maria Bamford: The Special Special Special! (2...	Comedy
      7201	72696	Old Dogs (2009)	Comedy
      9056	141994	Saving Christmas (2014)	Children|Comedy
      5258	8632	Secret Society (2002)	Comedy
      9590	175475	The Emoji Movie (2017)	Animation|Children|Comedy
      8908	135216	The Star Wars Holiday Special (1978)	Adventure|Children|Comedy|Sci-Fi
      8676	122246	Tooth Fairy 2 (2012)	Children|Comedy
      5795	31692	Uncle Nino (2003)	Comedy
      6784	60363	Zombie Strippers! (2008)	Comedy|Horror



6. 2015년도에 평가된 모든 Romance 영화의 평균 평점은?
   =&gt; 3.396375098502758


</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 2</strong></p>

<p>R에서 데이터 분석에 사용되는 mpg data set을 이용하여 pandas로 기술분석을
진행합니다.</p>

<p>mpg data set 파일은 아래 링크에서 다운로드 할 수 있습니다.</p>

<p><a href="/assets/downloads/mpg.zip" target="_blank">사용할 mpg 데이터 파일</a></p>

<p>만약 R이 설치되어 있다면 다음의 코드로 데이터파일을 생성할 수 있습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## mpg data set 파일 저장</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">write.csv</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w">
          </span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/notebook_dir/mpg.txt"</span><span class="p">,</span><span class="w">
          </span><span class="n">row.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
          </span><span class="n">quote</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
          </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>기본적인 column에 대한 설명은 아래와 같고 더 자세한 설명은 아래에 링크된
사이트로 이동하시면 상세한 설명을 보실 수 있습니다.</p>

<p><a href="https://rpubs.com/shailesh/mpg-exploration" target="_blank">R mpg data set Documentation</a></p>

<pre><code class="language-txt"># 주요컬럼 설명
# manufacturer : 제조회사
# displ : 배기량
# cyl : 실린더 개수
# drv : 구동 방식
# hwy : 고속도로 연비
# class : 자동차 종류
# model : 자동차 모델명
# year : 생산연도
# trans : 변속기 종류
# cty : 도시 연비
# fl : 연료 종류
</code></pre>

<blockquote>
  <p><strong>pandas를 사용하여 다음의 문제를 해결합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">
1. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 
   어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 확인하세요.


2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 한다. 
   "audi"와 "toyota" 중 어느 manufacturer(제조회사)의 cty(도시 연비)가 
   평균적으로 더 높은지 확인하세요.


3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 한다. 
   이 회사들의 데이터를 추출한 후 hwy(고속도로 연비) 평균을 구하세요.


4. "audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 
   높은지 알아보려고 한다. 
   "audi"에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.


5. mpg 데이터는 연비를 나타내는 변수가 2개입니다. 
   두 변수를 각각 활용하는 대신 하나의 통합 연비 변수를 만들어 사용하려 합니다. 
   평균 연비 변수는 두 연비(고속도로와 도시)의 평균을 이용합니다. 
   회사별로 "suv" 자동차의 평균 연비를 구한후 내림차순으로 정렬한 후 1~5위까지 데이터를 출력하세요.


6. mpg 데이터의 class는 "suv", "compact" 등 자동차의 특징에 따라 
   일곱 종류로 분류한 변수입니다. 어떤 차종의 도시 연비가 높은지 비교하려 합니다. 
   class별 cty 평균을 구하고 cty 평균이 높은 순으로 정렬해 출력하세요.


7. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려 합니다. 
   hwy(고속도로 연비) 평균이 가장 높은 회사 세 곳을 출력하세요.


8. 어떤 회사에서 "compact" 차종을 가장 많이 생산하는지 알아보려고 합니다. 
   각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.

</code></pre>

<pre><code class="language-txt">
예상되는 정답.

1. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 
   어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 확인하세요.
   =&gt; 배기량 4이하인자동차 : 25.96319018404908
      배기량 5이상인자동차 : 18.07894736842105

2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 한다. 
   "audi"와 "toyota" 중 어느 manufacturer(제조회사)의 cty(도시 연비)가 
   평균적으로 더 높은지 확인하세요.
    =&gt; audi의도시연비평균 : 17.61111111111111
       toyota의도시연비평균 : 18.529411764705884
 
3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 한다. 
   이 회사들의 데이터를 추출한 후 hwy(고속도로 연비) 평균을 구하세요.
    =&gt; hwy(고속도로 연비) 평균 : 22.50943396226415

4. "audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 
   높은지 알아보려고 한다. "audi"에서 생산한 자동차 중 hwy가 1~5위에 해당하는 
   자동차의 데이터를 출력하세요.
    =&gt; manufacturer	model	displ	year	cyl	trans	drv	cty	hwy	fl	class
       2	audi	a4	2.0	2008	4	manual(m6)	f	20	31	p	compact
       3	audi	a4	2.0	2008	4	auto(av)	f	21	30	p	compact
       0	audi	a4	1.8	1999	4	auto(l5)	f	18	29	p	compact
       1	audi	a4	1.8	1999	4	manual(m5)	f	21	29	p	compact
       9	audi	a4 quattro	2.0	2008	4	manual(m6)	4	20	28	p	compact

5. mpg 데이터는 연비를 나타내는 변수가 2개입니다. 
   두 변수를 각각 활용하는 대신 하나의 통합 연비 변수를 만들어 사용하려 합니다. 
   평균 연비 변수는 두 연비(고속도로와 도시)의 평균을 이용합니다. 
   회사별로 "suv" 자동차의 평균 연비를 구한후 내림차순으로 정렬한 후 1~5위까지 데이터를 출력하세요.
   =&gt; 	        avg_fuel_efficiency
     manufacturer	
     subaru	21.916667
     toyota	16.312500
     nissan	15.875000
     mercury	15.625000
     jeep	15.562500
     ford	15.333333
     chevrolet	14.888889
     lincoln	14.166667
     land rover	14.000000
     dodge	13.928571 

6. mpg 데이터의 class는 "suv", "compact" 등 자동차의 특징에 따라 
   일곱 종류로 분류한 변수입니다. 어떤 차종의 도시 연비가 높은지 비교하려 합니다. 
   class별 cty 평균을 구하고 cty 평균이 높은 순으로 정렬해 출력하세요.
   =&gt; class
     subcompact    20.371429
     compact       20.127660
     midsize       18.756098
     minivan       15.818182
     2seater       15.400000
     suv           13.500000
     pickup        13.000000
     Name: cty, dtype: float64

7. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려 합니다. 
   hwy(고속도로 연비) 평균이 가장 높은 회사 세 곳을 출력하세요.
   =&gt; manufacturer
     honda         32.555556
     volkswagen    29.222222
     hyundai       26.857143
     Name: hwy, dtype: float64

8. 어떤 회사에서 "compact" 차종을 가장 많이 생산하는지 알아보려고 합니다. 
   각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.
   =&gt; manufacturer
     audi          15
     volkswagen    14
     toyota        12
     subaru         4
     nissan         2
     Name: class, dtype: int64

</code></pre>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 3</strong></p>

<p>본격적으로 데이터 분석 연습문제를 풀어겠습니다.</p>

<p>실습데이터는 <code class="highlighter-rouge">한국복지패널데이터</code>를 이용합니다. 이 데이터는 한국보건사회연구원에서
전국 7000여 가구를 선정해 2006년부터 매년 추적 조사한 자료로, 경제활동, 생활실태,
복지욕구등 천여 개 변수로 구성되어 있습니다.</p>

<p>해당 데이터에는 우리나라의 다양한 삶에 대한 데이터가 들어있고 이를 분석하면 대한민국
사람들이 어떻게 살아가고 있는가를 분석할 수 있습니다.</p>

<p><a href="/assets/downloads/Koweps.zip" target="_blank">사용할 한국복지패널데이터 데이터 파일</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 한국복지패널데이터를 이용한 데이터 분석 연습</span>

<span class="c"># 데이터 준비</span>

<span class="c"># 제공된 파일의 압축을 풀면 파일이 2개 있습니다. </span>
<span class="c"># Koweps_hpc10_2015_beta1.sav : SPSS 데이터 파일 (128M)</span>
<span class="c"># Koweps_Codebook.xlsx : 우리가 사용할 column에 대한 설명</span>
<span class="c"># 총 7개의 column만을 이용합니다. </span>


<span class="c"># 데이터 파일인 Koweps_hpc10_2015_beta1.sav 파일은 </span>
<span class="c"># 상용 통계분석 소프트웨어인 SPSS 전용파일입니다. </span>

<span class="c"># 해당 데이터 파일은 SPSS 전용파일이기 때문에 pandas에서 사용하기 </span>
<span class="c"># 위해서 다음의 코드를 이용해서 DataFrame으로 변환해야 합니다.</span>


<span class="c"># pip install savReaderWriter </span>

<span class="kn">import</span> <span class="nn">pandas</span>
<span class="kn">import</span> <span class="nn">savReaderWriter</span>

<span class="k">with</span> <span class="n">savReaderWriter</span><span class="o">.</span><span class="n">SavReader</span><span class="p">(</span><span class="s">'./data/Koweps_hpc10_2015_beta1.sav'</span><span class="p">,</span> <span class="n">ioUtf8</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span> <span class="k">as</span> <span class="n">reader</span><span class="p">:</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">reader</span><span class="o">.</span><span class="nb">all</span><span class="p">(),</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">reader</span><span class="o">.</span><span class="n">header</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>      <span class="c"># # (16664, 957)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'h10_g3'</span><span class="p">]</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>  <span class="c"># 성별</span>
<span class="n">df</span><span class="p">[</span><span class="s">'h10_g4'</span><span class="p">]</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>  <span class="c"># 태어난 연도</span>

</code></pre></div></div>

<blockquote>
  <p><strong>준비된 데이터를 이용하여 데이터 분석을 진행합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">1. 성별에 따른 월급 차이
   과거에 비해 여성의 사회 진출이 활발하지만 직장에서의
   위상에서는 여전히 차별이 존재하고 있는것이 사실.
   실제로 그러한지 월급의 차이를 이용하여 사실을 확인해보자


2. 나이와 월급의 관계
   평균적으로 몇 살 때 월급을 가장 많이 받을까? 또 그때의 평균 월급은 얼마인가?


3. 연령대에 따른 월급 차이
   30세 미만을 초년(young), 
   30~59세 : 중년(middle), 
   60세 이상 : 노년(old)
   위의 범주로 연령대에 따른 월급의 차이를 알아보자


4. 연령대 및 성별 월급 차이
   성별 월급 차이는 연령대에 따라 다른 양상을 보일 수 있습니다.
   성별 월급 차이가 연령대에 따라 다른지 분석해보자

   기존에는 3그룹(초년,중년,노년)이었지만 이젠 6그룹으로
   그룹핑을 해야 한다.(초년남성,초년여성,..)


5. 직업별 월급 차이
   어떤 직업이 월급을 가장 많이 받을까?
   직업별 월급을 분석해 보자
   직업코드는 제공된 Koweps_Codebook.xlsx을 이용하면 
   편하게 코드값을 이용 할 수 있습니다.


6. 성별 직업 빈도
   성별로 어떤 직업이 가장 많을까?


7. 종교 유무에 따른 이혼율
   종교가 있는 사람들이 이혼을 덜 할까??
   종교있는 사람과 종교가 없는 사람들의 총원이 다르기 때문에
   각 파트의 이혼률을 구해서 비교하면 될 듯 합니다.
    


8. 지역별 연령대 비율
   노년층이 많은 지역은 어디일까?
   노년층의 수가 많은 지역이 어디인지를 알아내는 문제입니다. 각 지역마다 노년층의
   인구수를 구해서 가장 많은 노년층 인구가 있는 지역을 출력하시면 됩니다.

</code></pre>

<pre><code class="language-txt">
예상되는 정답.

1. 성별에 따른 월급 차이
   과거에 비해 여성의 사회 진출이 활발하지만 직장에서의
   위상에서는 여전히 차별이 존재하고 있는것이 사실.
   실제로 그러한지 월급의 차이를 이용하여 사실을 확인해보자
    ==&gt; # 결과
        # 남성 평균 월급 : 312.2932
        # 여성 평균 월급 : 163.2471
        # 남성이 여성보다 월급이 약 150만원 많다.

2. 나이와 월급의 관계
   평균적으로 몇 살 때 월급을 가장 많이 받을까? 또 그때의 평균 월급은 얼마인가?
   ==&gt; 월급을 가장 많이 받는 나이는 : 53살, 월급 : 318.6777   


3. 연령대에 따른 월급 차이
   30세 미만을 초년(young), 
   30~59세 : 중년(middle), 
   60세 이상 : 노년(old)
   위의 범주로 연령대에 따른 월급의 차이를 알아보자
   ==&gt; # 초년(young) : 163.5953
       # 중년(middle) : 281.8871
       # 노년(old) : 125.3295


4. 연령대 및 성별 월급 차이
   성별 월급 차이는 연령대에 따라 다른 양상을 보일 수 있습니다.
   성별 월급 차이가 연령대에 따라 다른지 분석해보자
   기존에는 3그룹(초년,중년,노년)이었지만 이젠 6그룹으로
   그룹핑을 해야 한다.(초년남성,초년여성,..)
   ==&gt; # 초년 남성 : 170.81737
       # 초년 여성 : 159.50518
       # 중년 남성 : 353.07574
       # 중년 여성 : 187.97552
       # 노년 남성 : 173.85558
       # 노년 여성 : 81.52917



5. 직업별 월급 차이
   어떤 직업이 월급을 가장 많이 받을까?
   직업별 월급을 분석해 보자
   직업코드는 제공된 Koweps_Codebook.xlsx을 이용하면 
   편하게 코드값을 이용 할 수 있습니다.
 

6. 성별 직업 빈도
   성별로 어떤 직업이 가장 많을까?


7. 종교 유무에 따른 이혼율
   종교가 있는 사람들이 이혼을 덜 할까??


8. 지역별 연령대 비율
   노년층이 많은 지역은 어디일까?

</code></pre>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-group</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-11T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-group</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">Series Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Series Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과에 학년에 중복된 값이 있다.</span>
<span class="c"># 학과를 기준으로 grouping작업</span>
<span class="n">dept</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">])</span>  
<span class="n">display</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>    <span class="c"># &lt;pandas.core.groupby.generic.SeriesGroupBy object at ~ &gt;</span>

<span class="c"># 그룹 안에 데이터를 확인하고 싶은 경우에는 get_group() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">get_group</span><span class="p">(</span><span class="s">'컴퓨터'</span><span class="p">))</span>   <span class="c"># Series로 리턴</span>

<span class="c"># 각 그룹의 사이즈를 확인하고 싶은 경우에는 size() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">size</span><span class="p">())</span>  <span class="c"># Series로 리턴             </span>

<span class="c"># 각 그룹의 평균을 알고 싶은 경우</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>

<span class="c"># 2단계 grouping</span>
<span class="n">dept_year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">],</span><span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="c"># unstack을 이용하여 최하위 index를 column으로 설정</span>
<span class="n">display</span><span class="p">(</span><span class="n">dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">unstack</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과에 학년에 중복된 값이 있다.</span>
<span class="c"># 학과를 기준으로 grouping작업</span>
<span class="n">df_group_dept</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">])</span>  
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="p">)</span>    <span class="c"># &lt;pandas.core.groupby.generic.DataFrameGroupBy object at ~ &gt;</span>

<span class="c"># 그룹 안에 데이터를 확인하고 싶은 경우에는 get_group() 사용</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">get_group</span><span class="p">(</span><span class="s">'컴퓨터'</span><span class="p">))</span>   <span class="c"># DataFrame으로 리턴</span>

<span class="c"># 각 그룹의 사이즈를 확인하고 싶은 경우에는 size() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">size</span><span class="p">())</span>  <span class="c"># Series로 리턴             </span>

<span class="c"># 각 그룹의 평균을 알고 싶은 경우</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>

<span class="c"># 2단계 grouping</span>
<span class="n">df_dept_year</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="c"># unstack을 이용하여 최하위 index를 column으로 설정</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">unstack</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 다양한 Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 다양한 Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과별 평균학점은?</span>
<span class="c"># print(df["학점"].groupby(df["학과"]).mean())</span>

<span class="c"># 학과별 평균학점의 다른 표현</span>
<span class="c"># print(df.groupby(df["학과"])["학점"].mean())</span>

<span class="c"># 학과, 학년별 평균 학점은?</span>
<span class="c"># display(df.groupby([df["학과"],df["학년"]]).mean())</span>
<span class="c"># display(df.groupby(["학과","학년"]).mean())</span>

<span class="c"># 학과별 몇명이 존재하는가?</span>
<span class="c"># print(df.groupby(df["학과"])["이름"].count())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping과 반복문</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과로 그룹핑한 후 for문을 이용한 반복 처리</span>
<span class="k">for</span> <span class="n">dept</span><span class="p">,</span> <span class="n">group</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">]):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>
    <span class="n">display</span><span class="p">(</span><span class="n">group</span><span class="p">)</span>

    
<span class="c"># 학과와 학년으로 Grouping한 후 for문을 이용한 반복 처리</span>
<span class="k">for</span> <span class="p">(</span><span class="n">dept</span><span class="p">,</span> <span class="n">year</span><span class="p">),</span> <span class="n">group</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">]):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">year</span><span class="p">)</span>
    <span class="n">display</span><span class="p">(</span><span class="n">group</span><span class="p">)</span>


</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping 후 데이터 변환</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># grouping한 내용을 list로 변환</span>
<span class="n">myList</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">]))</span>  <span class="c"># tuple형태의 list가 생성(group명,DataFrame)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span> <span class="c"># &lt;class 'tuple'&gt;</span>

<span class="k">print</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span> <span class="c"># 체육교육과</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]))</span> <span class="c"># &lt;class 'pandas.core.frame.DataFrame'&gt;</span>

<span class="c">###</span>

<span class="n">my_list</span> <span class="o">=</span> <span class="p">[(</span><span class="s">'홍길동'</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="p">(</span><span class="s">'김길동'</span><span class="p">,</span><span class="mi">30</span><span class="p">),</span> <span class="p">(</span><span class="s">'최길동'</span><span class="p">,</span><span class="mi">50</span><span class="p">)]</span>
<span class="n">my_dict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">my_dict</span><span class="p">)</span>  <span class="c"># {'홍길동': 20, '김길동': 30, '최길동': 50}</span>

<span class="n">myDict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">myList</span><span class="p">)</span> 
<span class="k">print</span><span class="p">(</span><span class="n">myDict</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">myDict</span><span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">])</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-transform</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-10T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-transform</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (DataFrame 생성)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (DataFrame 생성)</span>

<span class="c"># random seed 고정</span>
<span class="c"># [0,10) 사이의 정수형 난수를 균등분포로 추출해서 </span>
<span class="c"># 6행 4열 DataFrame 생성</span>
<span class="c"># cloumn과 index는 따로 지정하지 않는다. (column도 숫자로 표현)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (index와 column 재정의)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (index와 column 재정의)</span>

<span class="c"># column : "A", "B", "C", "D"</span>
<span class="c"># index : 날짜를 이용, 2020-01-01부터 1일씩 증가</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="c"># df.index = pd.date_range("20200101", "20200106")</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (새로운 column 추가)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (새로운 column 추가)</span>

<span class="c"># NaN값을 포함하는 "E" column 추가</span>
<span class="c"># "E" column의 데이터 : [7, np.nan, 4, np.nan, 2, np.nan]</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span>
<span class="c"># NaN은 float로 간주</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 제거)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 제거)</span>

<span class="c"># NaN값 제거</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">how</span><span class="o">=</span><span class="s">"any"</span><span class="p">)</span>    
                        <span class="c"># (how="any") =&gt; NaN이 하나라도 포함되어 있는 행 삭제</span>
                        <span class="c"># (how="all") =&gt; 모든 column의 값이 NaN인 행 삭제    </span>
                        <span class="c"># 결과 DataFrame을 return, 원본 변경 X</span>
                        <span class="c"># inplace=True인 경우 원본 변경.</span>
            
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 대체)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 대체)</span>

<span class="c"># NaN값을 다른값으로 대체</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
                        <span class="c"># 결과 DataFrame을 return, 원본 변경 X</span>
                        <span class="c"># inplace=True인 경우 원본 변경.</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 boolean mask 활용)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 boolean mask 활용)</span>

<span class="c"># NaN에 대한 boolean mask활용</span>
<span class="c"># "E" column의 값이 NaN인 행들을 찾아 해당 행의 모든 column 출력</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">isnull</span><span class="p">())</span>  <span class="c"># NaN에 대한 boolean mask</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">isnull</span><span class="p">()[</span><span class="s">"E"</span><span class="p">],:])</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - 중복행 제거</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"k1"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">4</span><span class="p">,</span>
                  <span class="s">"k2"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="p">})</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">duplicated</span><span class="p">())</span>              <span class="c"># Series형태의 boolean mask</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">duplicated</span><span class="p">(),:])</span>  <span class="c"># 중복행 알아내기</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">())</span>       <span class="c"># 중복행 제거</span>

<span class="c">#########</span>

<span class="n">df</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"k1"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">4</span><span class="p">,</span>
                  <span class="s">"k2"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="p">})</span>

<span class="n">df</span><span class="p">[</span><span class="s">"k3"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">())</span>             <span class="c"># 삭제되는 행이 없다.</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">([</span><span class="s">"k1"</span><span class="p">]))</span>       <span class="c"># 특정열을 기준으로 중복삭제</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">([</span><span class="s">"k1"</span><span class="p">,</span><span class="s">"k2"</span><span class="p">]))</span>  <span class="c"># keep="first"</span>
<span class="c"># df.drop_duplicates(["k1","k2"], keep="last")  # 중복된 마지막 행을 남긴다.</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - replace</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="o">-</span><span class="mi">1000</span><span class="p">,</span><span class="mf">3.0</span><span class="p">])</span>

<span class="c"># 이상치를 찾아서 치환</span>
<span class="n">new_s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_s</span><span class="p">)</span>

<span class="n">new_s</span> <span class="o">=</span> <span class="n">new_s</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  <span class="c"># new_s.fillna(0)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_s</span><span class="p">)</span>

<span class="c">######</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span><span class="o">-</span><span class="mi">100</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - category</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Categories 데이터형</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span> <span class="p">{</span><span class="s">"id"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span>
                    <span class="s">"raw_grade"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"e"</span><span class="p">]})</span>
<span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"raw_grade"</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">"category"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span><span class="p">)</span>   <span class="c"># category 확인</span>

<span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span> <span class="o">=</span> <span class="p">[</span><span class="s">"good"</span><span class="p">,</span><span class="s">"normal"</span><span class="p">,</span><span class="s">"bad"</span><span class="p">]</span>  <span class="c"># category 이름 변경</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 새로운 category를 정의 ( category의 수를 증감 )</span>
<span class="c"># df["grade"] = df["grade"].cat.set_categories(["very good", "good","normal","bad", "very bad"])</span>
<span class="c"># display(df)</span>

<span class="c"># category는 정의된 순서에 따라서 대소관계를 가진다.</span>
<span class="n">df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">"grade"</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - 숫자데이터의 category</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 숫자데이터의 category화</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">20</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">32</span><span class="p">]</span>
<span class="n">bins</span> <span class="o">=</span> <span class="p">[</span><span class="mi">18</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">35</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span>   <span class="c"># 숫자값 구분(총 4개의 구간, 초과~이하)</span>

<span class="n">cats</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">ages</span><span class="p">,</span><span class="n">bins</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">categories</span><span class="p">)</span> <span class="c"># 생성된 category 확인</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">codes</span><span class="p">)</span>  <span class="c"># category의 숫자화 ( 각 성분의 위치 )</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">value_counts</span><span class="p">())</span>  <span class="c"># 각 category의 count</span>

<span class="c"># 각 category의 이름을 지정</span>
<span class="n">group_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">"young"</span><span class="p">,</span><span class="s">"youngAdult"</span><span class="p">,</span><span class="s">"middleAge"</span><span class="p">,</span><span class="s">"Senior"</span><span class="p">]</span>
<span class="n">cats</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">ages</span><span class="p">,</span><span class="n">bins</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">group_names</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="p">)</span>
</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-merge</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-08T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-merge</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - inner join</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># inner join의 효과</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - outer,left,right join</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># full outer join, left outer join, right outer join</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"outer"</span><span class="p">))</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"left"</span><span class="p">))</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"right"</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - 컬럼명이 다른 경우</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># 컬럼명이 다른 경우의 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학생학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="c"># DataFrame의 column명이 다른 경우</span>
<span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s">"학생학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - column과 index를 이용한 merge</strong></p>

<p>index를 이용한 merge는 결과로 만들어지는 DataFrame의 index에 주의해야 합니다.
DataFrame을 생성한 후 index부분을 살펴보면 이해하실 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># DataFrame의 column과 index를 이용한 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> 
                  <span class="n">left_on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> 
                  <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="c"># Error</span>
<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="c"># OK</span>

<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="c"># OK</span>
<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="c"># Error</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - index를 이용한 merge</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># DataFrame의 index를 이용한 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> 
                  <span class="n">left_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>  <span class="c"># OK, 강감찬</span>
<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>  <span class="c"># OK, 박동훈</span>
<span class="c"># result.loc[3]   # Error</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame concatenation-Series 연결</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># DataFrame concatenation</span>

<span class="c"># Series를 1차원, 2차원으로 연결</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">s1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"c"</span><span class="p">])</span>
<span class="n">s2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"e"</span><span class="p">])</span>
<span class="n">s3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"f"</span><span class="p">,</span><span class="s">"g"</span><span class="p">])</span>

<span class="c"># Series를 1차원으로 연결</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>

<span class="c"># Series를 2차원으로 연결 =&gt; DataFrame생성</span>

<span class="c"># 중복된 index처리에 주의</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  <span class="c"># index 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c"># Series를 2차원으로 연결 후 columns명 설정</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                   <span class="n">keys</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame concatenation-DataFrame 연결</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame concatenation</span>

<span class="c"># DataFrame을 열과 행 방향으로 연결</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
                   <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"b"</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
                   <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="c"># DataFrame의 concatenate</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  <span class="c"># index 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c"># DataFrame의 concatenate ( index를 새로 설정 )</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> 
                   <span class="n">ignore_index</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span> <span class="c"># column 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-functions</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-07T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-functions</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">## 기댓값(expected value) : 어떤 확률을 가진 사건을 무한히 반복했을 경우 </span>
<span class="c">##                         얻을 수 있는 값의 평균으로서 기대할 수 있는 값</span>

<span class="c"># 주사위 1개를 던지는 사건을 무한히 반복했을 경우 기댓값은?</span>
<span class="c"># import numpy as np</span>

<span class="c"># result = np.random.randint(1,7,(100000,))</span>
<span class="c"># print(result.mean())</span>

<span class="c">## 편차( deviation ) : 확률변수 X와 평균값(기댓값)의 차이. </span>
<span class="c">## 국민개개인의 소득을 이용하여 국민평균 소득을 산출한 후 </span>
<span class="c">## 편차의 관점에서 데이터를 바라보면 얼마나 양극화가 진행됬는지</span>
<span class="c">## 대략 가늠할 수 있다.</span>
<span class="c">## 데이터의 흩어진 정도를 알기 위해 편차의 평균을 이용하면 될 듯 하다. </span>
<span class="c">## 하지만 편차의 합계는 0이기 때문에 평균을 구할 수 없고</span>
<span class="c">## 결국 데이터의 흩어진 정도를 수치화 하기 힘들다.</span>

<span class="c">## 분산 ( variance ) : 데이터의 흩어진 정도를 알기 위해 사용하는 편차의 제곱의 평균.</span>
<span class="c">## 하지만 제곱한 값이기 때문에 사용하기 애매하다.</span>

<span class="c">## 표준편차 ( standard deviation ) : 분산의 제곱근</span>
<span class="c">## 데이터가 얼마나 흩어져 있는지, 얼마나 차이가 심한지를 알 수 있음.</span>

<span class="c"># 평균, 편차, 분산, 표준편차</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"합계 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="nb">sum</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"평균 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">mean</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"분산 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">var</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"표준편차 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">std</span><span class="p">()))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 공분산</strong></p>

<p><img src="/assets/built/images/covariance-formula.png" alt="공분산" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">## 공분산 ( covariance ) : 두 개의 확률변수의 관계를 보여주는 값</span>
<span class="c">## 확률변수 X(독립변수)와 Y(종속변수)에 대해 X가 변할 때 Y가 변하는 정도를 나타내는 값</span>

<span class="c">## 공분산은 두 확률변수 편차의 곱에 대한 평균으로 이 역시</span>
<span class="c">## 데이터가 평균으로 부터 얼마나 떨어져 있는가를 나타낸 값.</span>

<span class="c">## 그래프를 이용하여 공분산의 의미를 이해해보자.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># 독립변수 X에 대해 종속변수 Y의 값을 랜덤하게 구해보자</span>
<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span><span class="p">,</span><span class="mi">20</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>

<span class="n">x_mean</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">y_mean</span> <span class="o">=</span> <span class="n">y</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="c"># 이렇게 구한 값을 산점도로 표현해보자</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">"red"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x_mean</span><span class="p">,</span><span class="n">y_mean</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">"blue"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c"># x가 변할 때 y가 어떻게 변하는지를 확인할 수 있다.</span>
<span class="c"># 평균을 기준으로 1,3 사분면에 있는 점들은 x가 증가할 때 y가 증가하거나</span>
<span class="c">#                                          x가 감소할 때 y가 감소</span>
<span class="c"># 평균을 기준으로 2,4 사분면에 있는 점들은 x가 증가할 때 y가 감소하거나</span>
<span class="c">#                                          x가 감소할 때 y가 증가</span>

<span class="c"># 공분산은 이런 데이터의 변화량에 대한 총합</span>
<span class="c"># 따라서 공분산이 양수인지 음수인지에 따라 데이터의 방향성을 알 수 있다.</span>
<span class="c"># 다만, 단위의 문제 때문에 실제 어느정도의 연관성을 가지는지에 대한 내용은</span>
<span class="c"># 알 수 없다.</span>

<span class="c">## 모공분산은 두 확률변수 각각의 편차의 곱에 대한 평균으로 표현되고</span>
<span class="c">## 표준공분산은 두 확률변수 각각의 편차의 곱에 대한 합을 n-1로 나눠 계산한다.</span>
<span class="c">## 표준공분산이 n-1로 나누는 이유는 이렇게 해야 더 좋은 추정량이 되기 때문이다. </span>
   
<span class="c">## 만약 확률변수 X와 Y가 서로 아무 관련이 없는 독립이면 공분산은 0으로 수렴된다.</span>
<span class="c">## 방향성이 없이 랜덤하게 무수하게 많은 샘플에 대해 값을 계산하게 되면 결국 양수,음수가</span>
<span class="c">## 번갈아 나오게 되서 최종적으로 0과 가까워진다.</span>

<span class="c">## 일반적으로 역은 성립하지 않는다. 즉, X와 Y가 독립이 아니더라도</span>
<span class="c">## 공분산은 0이 될 수 있다.</span>
      
<span class="c">## 표준공분산의 공식을 이용하여 프로그램으로 두 확률변수간의 공분산을 계산해보자</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">sampleNum</span> <span class="o">=</span> <span class="mi">100</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="n">sampleNum</span><span class="p">,))</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,(</span><span class="n">sampleNum</span><span class="p">,))</span>

<span class="n">x_mean</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>   <span class="c"># x의 평균</span>
<span class="n">y_mean</span> <span class="o">=</span> <span class="n">y</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>   <span class="c"># y의 평균</span>

<span class="n">x_deviation</span> <span class="o">=</span> <span class="n">x</span><span class="o">-</span><span class="n">x_mean</span><span class="p">;</span> 
<span class="n">y_deviation</span> <span class="o">=</span> <span class="n">y</span><span class="o">-</span><span class="n">y_mean</span><span class="p">;</span> 

<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sampleNum</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">+=</span> <span class="p">(</span><span class="n">x_deviation</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">y_deviation</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    
<span class="n">result_covariance</span> <span class="o">=</span> <span class="n">result</span> <span class="o">/</span> <span class="p">(</span><span class="n">sampleNum</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>  <span class="c"># 표준공분산(n-1)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result_covariance</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">))</span>   <span class="c"># numpy의 함수를 이용하여 계산   </span>
   
<span class="c">## 2개의 확률 변수 중 하나의 값이 상승하는 경향을 보일 때, </span>
<span class="c">## 다른 값도 상승하는 경향의 관계에 있다면, 공분산의 값은 양수. </span>
<span class="c">## ( 그렇지 않은 경우 음수 )</span>
   
<span class="c">## 하지만 가장 큰 단점은 측정단위에 따라서 값이 달라진다는 것. </span>
<span class="c">## 즉, 두 변수가 얼마나 연관되었는지 그 강도(strength)를 잘 보여주지 못하는 경향이 있다.    </span>
<span class="c">## 측정 단위에 상관없이 두 변수 사이의 관계를 보여주는 값으로는 상관계수를 사용</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 공분산(예제)</strong></p>

<p><a href="/assets/downloads/2018_stock.zip" target="_blank">2018년 주식데이터 JSON</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 공분산이 양수인 경우 ( KOSPI 지수와 삼성전자 주가 )</span>
<span class="c"># 2020년 2월 기준 코스피200 지수 내 삼성전자의 비중은 33.24%</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">pandas_datareader.data</span> <span class="k">as</span> <span class="n">pdr</span> <span class="c"># 설치필요</span>
<span class="kn">from</span>  <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="c"># 특정날짜 객체 생성</span>
<span class="n">end</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 KOSPI 지수</span>
<span class="n">df_KOSPI</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"^KS11"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_KOSPI</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/KOSPI.json"</span><span class="p">)</span>

<span class="c"># json 파일의 날짜값은 timestamp를 이용한다.</span>
<span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="n">timestamp</span> <span class="o">=</span> <span class="mi">1514937600000</span>
<span class="n">datetime_obj</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">fromtimestamp</span><span class="p">(</span><span class="n">timestamp</span><span class="o">/</span><span class="mi">1000</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">datetime_obj</span><span class="p">)</span> <span class="c"># 2018-01-03 09:00:00</span>

<span class="c"># YAHOO에서 제공하는 삼성전자 주가</span>
<span class="n">df_SE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"005930.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_SE</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/SE.json"</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 부산산업 지수</span>
<span class="n">df_BUSAN</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"011390.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_BUSAN</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/부산산업.json"</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 LIG넥스원 주가</span>
<span class="n">df_LIG</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"079550.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_LIG</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/LIG넥스원.json"</span><span class="p">)</span>

<span class="n">df_close_KOSPI</span> <span class="o">=</span> <span class="n">df_KOSPI</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># 종가데이터</span>
<span class="n">df_close_SE</span> <span class="o">=</span> <span class="n">df_SE</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df_close_KOSPI</span><span class="o">.</span><span class="n">values</span><span class="p">,</span><span class="n">df_close_SE</span><span class="o">.</span><span class="n">values</span><span class="p">))</span>  <span class="c"># 공분산</span>
<span class="c"># 0행 0열 : KOSPI의 공분산</span>
<span class="c"># 0행 1열 : KOSPI와 SE의 공분산</span>
<span class="c"># 1행 0열 : SE와 KOSPI의 공분산</span>
<span class="c"># 1행 1열 : SE의 공분산</span>

<span class="n">df_close_BUSAN</span> <span class="o">=</span> <span class="n">df_BUSAN</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># 종가데이터</span>
<span class="n">df_close_LIG</span> <span class="o">=</span> <span class="n">df_LIG</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df_close_BUSAN</span><span class="p">,</span><span class="n">df_close_LIG</span><span class="p">))</span>  <span class="c"># 공분산</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 상관계수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">## 상관관계 (Correlation) : 두 대상이 서로 연관성이 있다고 추측되는 관계</span>
<span class="c">## 성적과 자존감</span>
<span class="c">## 온라인 게임과 폭력성</span>

<span class="c">## 상관계수 (Correlation Coefficient) : -1과 1사이의 실수.</span>

<span class="c">## 일반적으로 피어슨 상관계수를 의미하며 다른 상관계수도 존재한다.</span>
<span class="c">## 공분산을 각 변수의 표준편차의 곱으로 나눈값 </span>
<span class="c">## 하나의 변수가 변화할 때 다른 변수가 변화하는 정도를 의미</span>
<span class="c">## 양수일 경우 정적 상관관계, 음수일 경우 부적상관관계</span>

<span class="c">## 0에 가까울수록 관련성이 없음. 절대값이 1에 가까울수록 관련성이 높음.</span>
<span class="c">## 성적과 자존감의 상관계수가 0.8이면 성적이 높을수록 자존감이 높다고 추측</span>
   
<span class="c">## 단, 상관관계로 인과관계를 설명할 수 없음 (오류의 여지가 많음 )</span>
<span class="c">## 성적이 높기때문에 자존감이 높다 ??</span>
<span class="c">## 온라인게임을 많이하면 폭력적이된다 ??</span>

<span class="c">## 인과관계와 같이 한 변수가 다른 변수에 주는 영향력을 알아보기 위해서는</span>
<span class="c">## 회귀 분석(regression analysis)를 사용한다.</span>

<span class="c">## Network연결이 가능한 환경이라면 아래의 참고 코드를 이용하여 </span>
<span class="c">## 특정 종목의 종목코드를 알아와서 pandas_datareader를 이용하여</span>
<span class="c">## 특정기간의 주가를 알아와서 상관계수를 구할 수 있다.</span>

<span class="c">## 만약 Network연결이 안되는 환경이라면 제공된 JSON파일을</span>
<span class="c">## 읽어들여서 DataFrame을 생성한 후 상관계수를 구해보자.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="n">file_KOSPI</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/KOSPI.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_KOSPI</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_KOSPI</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span>  <span class="c"># Series</span>

<span class="n">file_SE</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/SE.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_SE</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_SE</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="n">file_LIG</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/LIG넥스원.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_LIG</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_LIG</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="n">file_PUSAN</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/부산산업.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_PUSAN</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_PUSAN</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="c"># NumPy 함수로 상관계수를 구해보자.</span>
<span class="n">np</span><span class="o">.</span><span class="n">corrcoef</span><span class="p">(</span><span class="n">series_KOSPI</span><span class="p">,</span><span class="n">series_SE</span><span class="p">)</span>

<span class="c"># 위에서 구한 Series를 이용해 DataFrame을 생성</span>
<span class="n">myDict</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"KOSPI"</span> <span class="p">:</span> <span class="n">series_KOSPI</span><span class="p">,</span>
           <span class="s">"SE"</span> <span class="p">:</span> <span class="n">series_SE</span><span class="p">,</span>
           <span class="s">"LIG넥스원"</span> <span class="p">:</span> <span class="n">series_LIG</span><span class="p">,</span>
           <span class="s">"부산산업"</span> <span class="p">:</span> <span class="n">series_PUSAN</span><span class="p">}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">myDict</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">())</span>   <span class="c"># DataFrame을 이용한 상관계수 계산</span>

<span class="c">#####################################</span>

<span class="c"># 참고코드</span>
<span class="c"># 외부 API를 이용해 KOSPI 전체 종목코드를 읽어온 후</span>
<span class="c"># 종목명으로 종목코드를 검색하는 코드.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c"># 전체 종목코드를 읽어온다.(네트워크 연결가능할 경우)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_html</span><span class="p">(</span><span class="s">"http://kind.krx.co.kr/corpgeneral/corpList.do"</span> <span class="o">+</span> \
                  <span class="s">"?method=download&amp;searchType=13"</span><span class="p">,</span> 
                  <span class="n">header</span><span class="o">=</span><span class="mi">0</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

<span class="c"># JSON 파일로 저장</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/전체종목코드.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"columns"</span><span class="p">)</span> 

<span class="c"># 종목명으로 종목코드 검색</span>
<span class="n">title</span> <span class="o">=</span> <span class="s">"LG화학"</span>  <span class="c"># 종목명</span>
<span class="n">code</span> <span class="o">=</span> <span class="s">"종목코드"</span>   <span class="c"># 종목코드</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[:,[</span><span class="s">"회사명"</span><span class="p">,</span><span class="s">"종목코드"</span><span class="p">]]</span> <span class="c"># 회사명과 종목코드만 추출</span>

<span class="c"># map() : Series에서만 사용, 사용자 정의함수 호출</span>
<span class="n">df</span><span class="p">[</span><span class="s">"종목코드"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"종목코드"</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="s">'{:06d}'</span><span class="o">.</span><span class="n">format</span><span class="p">)</span> <span class="c"># 종목코드 6자리로 변환</span>

<span class="n">code</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"회사명"</span><span class="p">]</span> <span class="o">==</span> <span class="n">title</span><span class="p">,</span><span class="s">"종목코드"</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="s">"종목명 : {}, 종목코드 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">title</span><span class="p">,</span><span class="n">code</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 상관계수 실습</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 주식데이터 생성</span>

<span class="c"># 공분산과 상관계수(피어슨 상관계수 공식이용)</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">pandas_datareader.data</span> <span class="k">as</span> <span class="n">pdr</span> <span class="c"># 설치필요</span>
<span class="kn">import</span> <span class="nn">datetime</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="c"># 특정날짜 객체 생성</span>
<span class="n">end</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 LG전자 주가 데이터 중 종가</span>
<span class="n">LG</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"066570.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="c"># YAHOO에서 제공하는 롯데쇼핑 주가 데이터 중 종가</span>
<span class="n">LOTTE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"023530.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="c"># YAHOO에서 제공하는 삼성전자 주가 데이터 중 종가</span>
<span class="n">SE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"005930.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"LG"</span> <span class="p">:</span> <span class="n">LG</span> <span class="p">,</span> <span class="s">"LOTTE"</span> <span class="p">:</span> <span class="n">LOTTE</span><span class="p">,</span> <span class="s">"SE"</span> <span class="p">:</span> <span class="n">SE</span> <span class="p">})</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 삼성전자의 공분산 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"SE"</span><span class="p">])))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 삼성전자의 상관계수 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">corr</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"SE"</span><span class="p">])))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 롯데쇼핑의 상관계수 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">corr</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LOTTE"</span><span class="p">])))</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">cov</span><span class="p">())</span>    <span class="c"># DataFrame안의 모든 컬럼에 대한 공분산</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">())</span>   <span class="c"># DataFrame안의 모든 컬럼에 대한 상관계수</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - sum, mean</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 분석용 함수 (Sample DataFrame 생성)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">],</span>
        <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">]</span>
       <span class="p">]</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">],</span>
                  <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>   <span class="c"># df.sum(axis=0)</span>
                  <span class="c"># skipna=True (default) =&gt; NaN은 제외</span>
                  <span class="c"># Series return</span>
                  
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>    <span class="c"># 특정 열에 대한 합</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"b"</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>  <span class="c"># 특정 행에 대한 합</span>

 <span class="n">skipna</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">NaN</span><span class="err">을</span> <span class="err">연산에</span> <span class="err">포함</span><span class="p">(</span><span class="err">실수처리</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">skipna</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>
             
<span class="c">#  skipna=True, NaN을 연산에서 배제    </span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">skipna</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
                                                    
<span class="c"># "one" column의 결측값은 "one" column의 평균으로</span>
<span class="c"># "two" column의 결측값은 "two" column의 최소값으로 대체</span>
<span class="n">one_avg</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="c"># df.mean(axis=0)["one"]</span>
<span class="n">two_min</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="nb">min</span><span class="p">()</span>  <span class="c"># df.min(axis=0)["two"]</span>

<span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="n">one_avg</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="n">two_min</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>       

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - count</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 분석용 함수 (Sample DataFrame 생성)</span>
<span class="c"># count() 함수는 DataFrame의 각 열이 가지고 있는 데이터의 개수를</span>
<span class="c"># Series로 return한다. 단, 유효한 값의 개수만을 계산한다.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">],</span>
        <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">]</span>
       <span class="p">]</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">],</span>
                  <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">count</span><span class="p">())</span>

<span class="c"># one    3</span>
<span class="c"># two    2</span>
<span class="c"># dtype: int64</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - sort</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame index와 column 재 설정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>   <span class="c"># 숫자 index사용, column명도 숫자 index처리</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 순열 랜덤 치환</span>
<span class="n">random_date</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">permutation</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>  
<span class="k">print</span><span class="p">(</span><span class="n">random_date</span><span class="p">)</span>
<span class="c"># np.random.shuffle(df.index)</span>
<span class="c"># shuffle()을 못쓰는 이유는 Index는 mutable opertion을 지원하지 않기때문.</span>

<span class="c"># index와 column이 재 설정된 DataFrame 생성</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">reindex</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">random_date</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"B"</span><span class="p">,</span><span class="s">"A"</span><span class="p">,</span><span class="s">"D"</span><span class="p">,</span><span class="s">"C"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="c">## axis 기준으로 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="c"># axis=0 : 행(row) 기준 정렬</span>
<span class="c"># axis=1 : 열(column) 기준 정렬</span>
<span class="c"># ascending=Flase : 내림차순 정렬</span>

<span class="c">## 특정 column의 값으로 행 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">"B"</span><span class="p">))</span>

<span class="c"># "B"값이 같을 때 "A"로 정렬(2차정렬)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">"B"</span><span class="p">,</span><span class="s">"A"</span><span class="p">]))</span>   

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - unique, value_counts, isin</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 유용한 함수들</span>

<span class="c"># unique(), value_counts(), isin()</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"BB"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">,</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">]</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>          <span class="c"># 중복제거(ndarray)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">())</span>    <span class="c"># 각 값들의 개수 return(Series)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"BB"</span><span class="p">]))</span> <span class="c"># boolean indexing(Series) </span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 (lambda 함수)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 유용한 함수들</span>

<span class="c"># python에서 배운 lambda 함수를 DataFrame의 행, 열에 apply()를 통해 적용</span>
<span class="c"># 각 행의 column에 대해 최대값 - 최소값을 구해 새로운 column을 추가</span>
<span class="c"># 각 column안에서 최대값 - 최소값을 구해 출력</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">func</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="nb">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="nb">min</span><span class="p">()</span>

<span class="n">df</span><span class="p">[</span><span class="s">"최대-최소"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>  <span class="c"># Series return</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas의 내장 그래프 도구</strong></p>

<p>pandas는 그래프 module인 <code class="highlighter-rouge">matplotlib</code>의 기능 중 일부를 포함하고 있기 때문에
별도의 모듈 import 없이 DataFrame의 데이터를 그래프로 표현할 수 있습니다.</p>

<p>기본적인 선그래프, 막대그래프, 박스 plot, scatter 등을 그릴 수 있는데 시각화 모듈은
추후에 <code class="highlighter-rouge">matplotlib</code> module을 설명하면서 그쪽에서 자세히 설명하고 pandas의 시각화
기능은 따로 설명하지 않도록 하겠습니다.</p>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</title>
	  <link>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-indexing</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-05T01:40:00+09:00</pubDate>
	  <guid>https://moon9342.github.io/data-science-lecture-python-pandas-dataframe-indexing</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./data-science-lecture-relational-database-mysql-introduction">Relational Database MySQL(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-setup">Relational Database MySQL(2) - Install 및 환경설정</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-first-execution">Relational Database MySQL(3) - MySQL 전체 운영 실습</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-data-modeling">Relational Database MySQL(4) - Data Modeling</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-utility">Relational Database MySQL(5) - MySQL Utility</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part1">Relational Database MySQL(6) - SQL 기본</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part2">Relational Database MySQL(7) - SQL 고급(1)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-sql-part3">Relational Database MySQL(8) - SQL 고급(2)</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-table-view">Relational Database MySQL(9) - Table &amp; View</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-1">Relational Database MySQL(10) - Index</a></li>
    <li><a href="./data-science-lecture-relational-database-mysql-index-2">Relational Database MySQL(11) - Index 성능비교</a></li>

    <li><a href="./data-science-lecture-nosql-database-mongodb-introduction">NoSQL Database MongoDB(1) - Introduction</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-data-modeling">NoSQL Database MongoDB(2) - NoSQL Data Modeling</a></li>
    <li><a href="./data-science-lecture-nosql-database-mongodb-basic-concept">NoSQL Database MongoDB(3) - MongoDB Basic Concept</a></li>

    <li><a href="./data-science-lecture-python-introduction">Python 데이터분석 라이브러리(0) - Introduction</a></li>
    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>
    <li><a href="./data-science-lecture-python-matplotlib">Python 데이터분석 라이브러리(11) - matplotlib</a></li>
    <li><a href="./data-science-lecture-python-statistics">Python 데이터분석을 위한 통계</a></li>
    <li><a href="./data-science-lecture-python-seaborn">Python 데이터분석 라이브러리(12) - seaborn</a></li>
    <li><a href="./data-science-lecture-python-folium">Python 데이터분석 라이브러리(13) - folium</a></li>
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 특정 column 추출 (1)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column을 추출할 수 있다.</span>

<span class="c"># 하나의 column을 추출한 경우 Series로 return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">])</span>       
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">]))</span> <span class="c"># 결과는 Series로 return</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="err">이름</span><span class="p">)</span>  <span class="c"># df["이름"] 방식을 더 많이 사용.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 특정 column 추출 (2)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column을 추출한 후 </span>
<span class="c"># 데이터를 변경하면 원본 DataFrame에도 영향을 미친다.</span>

<span class="c"># python에서 warning message를 on,off할 수 있다.</span>

<span class="kn">import</span> <span class="nn">warnings</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>   <span class="c"># warning off</span>
<span class="c"># warnings.filterwarnings(action='default') # warning on</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">]</span>    <span class="c"># View가 아닌 복사본을 생성하려면 df["학년"].copy() 이용</span>

<span class="n">year</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1000</span>   <span class="c"># Series의 내용을 변경(View의 내용변경)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>          <span class="c"># DataFrame의 내용도 변경</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 2개 이상의 column 추출</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 두개 이상의 column을 추출할 수 있다.</span>
<span class="c"># Fancy Indexing을 사용.</span>

<span class="c"># 두개 이상의 column을 추출한 경우 Series가 아닌</span>
<span class="c"># DataFrame으로 결과 return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># print(df["names","year"])     # Error</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span>  <span class="c"># Fancy Indexing</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 특정 column 값 수정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column의 값 수정</span>

<span class="c"># 단일값 혹은 numpy array 혹은 list를 이용하여 수정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="s">"A"</span>   
<span class="c"># df["등급"] = ["A","B","D","B","A"] </span>
<span class="c"># df["등급"] = np.array(["A","B","D","C","C"])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 두 개 이상의 특정 column 값 수정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 두개 이상의 특정 column 값 수정</span>

<span class="c"># 단일값 혹은 numnpy array 혹은 list를 이용하여 수정</span>

<span class="c"># 참고</span>
<span class="c"># DataFrame의 column을 Fancy Indexing한 후 value들만</span>
<span class="c"># ndarray로 추출하려면 to_numpy() 함수 사용.</span>
<span class="c"># df[["grade","names"]].to_numpy() # numpy array로 변환</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">df</span><span class="p">[[</span><span class="s">"등급"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">]]</span> <span class="o">=</span> <span class="s">"A"</span>   
<span class="c"># df[["등급","이름"]] = [["A","최길동"],</span>
<span class="c">#                        ["B","이길동"],</span>
<span class="c">#                        ["D","박길동"],</span>
<span class="c">#                        ["B","박길동"],</span>
<span class="c">#                        ["A","문길동"]</span>
<span class="c">#                       ]</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame column 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 기존에 생성된 DataFrame에 column을 추가할 수 있다. </span>

<span class="c"># scalar, numpy array, list, Series 등을 이용해 추가</span>

<span class="c"># Series로 추가할 경우 index를 기반으로 추가!!</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"나이"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">20</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">22</span><span class="p">]</span>

<span class="c"># df["나이"] = [20,21,25,24] # Error(개수가 맞지 않음)</span>

<span class="c"># age = pd.Series([20,21,25,24,22])</span>
<span class="c"># df["나이"] = age    # 추가되는 내용 없음 (index 기반)</span>

<span class="c"># age = pd.Series([20,21,25], index=["one","two","three"])</span>
<span class="c"># df["나이"] = age  # matching되지 못한 index는 NaN</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 연산을 통한 column 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 기존에 생성된 DataFrame에 연산을 통해 column을 추가할 수 있다. </span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">2</span>
<span class="n">df</span><span class="p">[</span><span class="s">"장학여부"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">3.0</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 column 삭제</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column 삭제</span>

<span class="c"># drop() 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"등급"</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span> <span class="c"># inplace=True 원본 변경</span>
                                                 <span class="c"># return None</span>
                                                 <span class="c"># inplace=False 원본 변경 X</span>
                                                 <span class="c"># 삭제된 DataFrame return  </span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (1)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 Row(행) Indexing</span>

<span class="c"># 숫자 index 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># Column indexing</span>
<span class="c"># df["이름"]           # OK. Series return</span>
<span class="c"># df["이름":"학년"]    # Error. Slicing 불가능</span>
<span class="c"># df[["이름","학점"]]  # OK. Fancy indexing 가능</span>
                       <span class="c"># 참고로 Boolean Indexing은 Row Indexing 처리</span>

<span class="c"># Row indexing(index 숫자사용)   </span>
<span class="c"># df[1]               # Error. 단일 indexing이 안된다.</span>
<span class="c"># df[1:3]             # OK. slicing 가능 - slicing한 결과는 View</span>
<span class="c"># df[2:]              # OK. 일반적인 slicing가능(row)</span>
<span class="c"># df[[1,3]]           # Error. row에 대한 index숫자를 이용한 Fancy indexing은 안됨.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (2)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># 지정한 index 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df["one"]           # Error. index를 이용해서 단일 row 추출 안됨</span>
<span class="c"># df["one":"three"]   # OK. index를 이용한 row slicing가능</span>
<span class="c"># df["one":]          # OK. 일반적인 slicing이기 때문에 가능  </span>
<span class="c"># df["two":-1]        # Error. 숫자 index와 index를 혼합사용한 slicing안됨. </span>
<span class="c"># df[["one","two"]]   # Error. </span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (3)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># loc[]를 이용 (일반적인 row indexing 방법)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.loc["one"]           # OK. loc와 index를 이용하면 단일 row 추출 가능. </span>
                          <span class="c"># 결과는 Series</span>
<span class="c"># df.loc["one":"three"]   # OK. loc를 index를 이용하면 row slicing가능.</span>
<span class="c"># df.loc["one":]          # OK. loc를 index를 이용하면 row slicing가능.</span>
<span class="c"># df.loc["one":-1]        # Error. index 혼합 사용은 안됨.</span>
<span class="c"># df.loc[["one","three"]] # OK. loc와 index를 이용한 fancy indexing 가능.</span>

<span class="c"># loc와 숫자 index를 이용하는 방법은 모두 Error</span>
<span class="c"># 숫자 index를 이용할때는 iloc를 이용</span>
<span class="c"># df.loc[0]               # Error. loc와 숫자 index를 이용한 단일 row 추출 안됨.</span>
<span class="c"># df.loc[0:3]             # Error. loc와 숫자 index를 이용한 slicing 안됨.</span>
<span class="c"># df.loc[[0,3]]           # Error. loc와 숫자 index를 이용한 fancy indexing 안됨.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (4)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># loc[]를 이용, 특정 행과 열 slicing</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.loc["one":"three"]                   # OK. row slicing</span>
<span class="c"># df.loc["one":"three","이름"]            # OK. row slicing + column 선택 =&gt; Series 리턴</span>
<span class="c"># df.loc["one":"three","이름":"학년"]     # OK. row slicing + column slicing</span>
<span class="c"># df.loc["one":"three",:]                 # OK. row slicing + column slicing</span>
<span class="c"># df.loc["one":"three",["이름","학점"]]   # OK. row slicing + column fancy slicing</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame boolean indexing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 boolean mask 생성 후 </span>

<span class="c"># loc를 이용한 boolean indexing 처리</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># 학점이 1.5점을 초과하는 학생의 이름과 학점을 DataFrame으로 출력!</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">)</span>     <span class="c"># boolean MASK, Series로 return</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">,</span> <span class="p">[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span> 

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame boolean indexing 응용</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame boolean indexing 응용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># 이름이 "박동훈"인 사람을 찾아 이름과 학점을 DataFrame으로 출력</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">]</span> <span class="o">==</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="p">[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span>

<span class="c"># 학점이 (1.5,2.5)인 사람을 찾아 학과,이름,학점을 DataFrame으로 출력</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mf">2.5</span><span class="p">)</span> <span class="p">,</span> <span class="s">"학과"</span><span class="p">:</span><span class="s">"학점"</span><span class="p">])</span>

<span class="c"># 학점이 3.0을 초과하는 사람을 찾아 등급을 "A"로 설정하세요.</span>
<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">3.0</span><span class="p">,</span> <span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="s">"A"</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame iloc를 이용한 row indexing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame iloc를 이용한 row indexing</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.iloc[1]           # OK. index 숫자를 이용해 단일 행 선택가능.</span>
<span class="c"># df.iloc[1:4]         # OK. index 숫자를 이용해 row slicing가능</span>
<span class="c"># df.iloc[1:4,0:2]     # OK. index 숫자를 이용해 row slicing + column slicing가능</span>
<span class="c"># df.iloc[1:4,[0,2]]   # OK. index 숫자를 이용해 row slicing + column fancy indexing가능</span>
<span class="c"># df.iloc[[1,4],[0,2]] # OK. index 숫자를 이용해 row fancy indexing +</span>
                       <span class="c">#     column fancy indexing가능</span>
<span class="c"># df.iloc[0,0]         # OK. 특정 위치의 값 도출</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># loc를 이용한 DataFrame의 row 추가</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"six"</span><span class="p">,:]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s">"A"</span><span class="p">]</span> <span class="c"># index에 없기때문에 add</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"seven"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">:</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"박길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">]</span> <span class="c"># index에 없기때문에 add</span>
<span class="c"># df.loc["seven",["이름","등급"]] = ["박길동","A"] # Fancy indexing도 가능</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"seven"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">:]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"이길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s">"A"</span><span class="p">]</span>  <span class="c"># index에 존재하면 replace</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row 삭제</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame row 삭제</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"학년"</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c"># inplace=False, 열 삭제, 원본 변경 X</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"one"</span><span class="p">)</span> <span class="c"># inplace=False, 행 삭제(axis=0), 원본 변경 X</span>
                        <span class="c"># df.drop("one123") key를 못 찾으면 Error</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="c"># Fancy indexing 사용 가능</span>
<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">"one"</span><span class="p">,</span><span class="s">"three"</span><span class="p">])</span> <span class="c"># inplace=False, 행 삭제(axis=0), 원본 변경 X</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="c"># slicing으로는 삭제 안됨.</span>
<span class="c"># new_df = df.drop("one":"three") # slicing 삭제는 Error</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>


</channel>
</rss>
